{
	"info": {
		"_postman_id": "a163dfdd-aab6-41d7-982b-75140c96b426",
		"name": "STACKIT Argus API",
		"description": "API endpoints for Argus on STACKIT\n\nContact Support:\n Email: stackit-argus@mail.schwarz",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "clusters",
					"item": [
						{
							"name": "{cluster Id}",
							"item": [
								{
									"name": "v1 clusters create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"kubeconfig\": \"dolore\",\n  \"clusterName\": \"qui sint\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/clusters/:clusterId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"clusters",
												":clusterId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Initialize the cluster secrets and operators.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n    \n\n**Responses**\n\n***201*** - The cluster was successfully initialized\n\n***400*** - Something went wrong during initializing the operators or creating the git repo because the parameters were not correct\n\n***403*** - You are not authorized"
									},
									"response": [
										{
											"name": "The cluster was successfully initialized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"kubeconfig\": \"dolore\",\n  \"clusterName\": \"qui sint\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/clusters/:clusterId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"clusters",
														":clusterId"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Cluster successfully initialized\"\n}"
										},
										{
											"name": "Something went wrong during initializing the operators or creating the git repo because the parameters were not correct.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"kubeconfig\": \"dolore\",\n  \"clusterName\": \"qui sint\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/clusters/:clusterId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"clusters",
														":clusterId"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Failed to initialize cluster\"\n}"
										},
										{
											"name": "You are not authorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"kubeconfig\": \"dolore\",\n  \"clusterName\": \"qui sint\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/clusters/:clusterId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"clusters",
														":clusterId"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								},
								{
									"name": "v1 clusters delete",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/clusters/:clusterId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"clusters",
												":clusterId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete the operators, secrets and git repo but will not delete the pods deployed by flux.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n    \n\n**Response**\n\n***200*** - The cluster was successfully deleted\n\n***400*** - Something went wrong during deleting the operators and git repo.\n\n***403*** - You are not authorized"
									},
									"response": [
										{
											"name": "The cluster was successfully deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/clusters/:clusterId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"clusters",
														":clusterId"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Cluster successfully deleted\"\n}"
										},
										{
											"name": "Something went wrong during deleting the operators and git repo.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/clusters/:clusterId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"clusters",
														":clusterId"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Failed to delete crd and so the cluster\"\n}"
										},
										{
											"name": "You are not authorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/clusters/:clusterId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"clusters",
														":clusterId"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								},
								{
									"name": "v1 clusters instances status list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/clusters/:clusterId/instances/:instanceId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"clusters",
												":clusterId",
												"instances",
												":instanceId",
												"status"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get deployment status.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic auth\n*   api token\n    \n\n**Response**\n\n***200*** - get deployment status\n\n***400*** - Something went wrong getting deployment status\n\n***403*** - Accepts admin basic auth + api token"
									},
									"response": [
										{
											"name": "Get deployment status",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic auth + api token.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/clusters/:clusterId/instances/:instanceId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"clusters",
														":clusterId",
														"instances",
														":instanceId",
														"status"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"state\": \"in progress\",\n  \"description\": \"Not all pods are ready yet\",\n  \"instance_usable\": false,\n  \"update_repeatable\": false\n}"
										},
										{
											"name": "Something went wrong getting deployment status",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic auth + api token.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/clusters/:clusterId/instances/:instanceId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"clusters",
														":clusterId",
														"instances",
														":instanceId",
														"status"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Something went wrong getting deployment status\"\n}"
										},
										{
											"name": "Accepts admin basic auth + api token.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic auth + api token.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/clusters/:clusterId/instances/:instanceId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"clusters",
														":clusterId",
														"instances",
														":instanceId",
														"status"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "v1 clusters list",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "search string that should be in cluster name",
										"key": "search",
										"value": "deserunt"
									},
									{
										"description": "page index when the clusters should be paged. It will return 4 cluster per page",
										"key": "pageIdx",
										"value": "89499240.82197812"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clusters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clusters"
									]
								},
								"description": "Get all cluster names.\n\n**Authorization**\n\nAccepts:\n\n*   admin auth\n    \n\n**Responses**\n\n***200*** - You are authorized and get all cluster names\n\n***400*** - The params are not valid\n\n***403*** - You are not authorized\n\n**Parameters**\n\n***search*** - string (*header*): search string that should be in cluster name\n\n***pageIdx*** - number (*header*): page index when the clusters should be paged. it will return 4 cluster per page"
							},
							"response": [
								{
									"name": "You are authorized and get all cluster names",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts admin auth",
												"key": "Authorization",
												"value": "deserunt"
											},
											{
												"description": "search string that should be in cluster name",
												"key": "search",
												"value": "deserunt"
											},
											{
												"description": "page index when the clusters should be paged. It will return 4 cluster per page",
												"key": "pageIdx",
												"value": "89499240.82197812"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"clusters"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"List of clusters\",\n  \"clusters\": [\n    \"intern\",\n    \"schwarz\"\n  ]\n}"
								},
								{
									"name": "The params are not valid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts admin auth",
												"key": "Authorization",
												"value": "deserunt"
											},
											{
												"description": "search string that should be in cluster name",
												"key": "search",
												"value": "deserunt"
											},
											{
												"description": "page index when the clusters should be paged. It will return 4 cluster per page",
												"key": "pageIdx",
												"value": "89499240.82197812"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"clusters"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Parameters are wrong data format\"\n}"
								},
								{
									"name": "You are not authorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts admin auth",
												"key": "Authorization",
												"value": "deserunt"
											},
											{
												"description": "search string that should be in cluster name",
												"key": "search",
												"value": "deserunt"
											},
											{
												"description": "page index when the clusters should be paged. It will return 4 cluster per page",
												"key": "pageIdx",
												"value": "89499240.82197812"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/clusters",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"clusters"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "grafana-plugins",
					"item": [
						{
							"name": "{plugin Name}",
							"item": [
								{
									"name": "v1 grafana-plugins read",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grafana-plugins",
												":pluginName"
											],
											"variable": [
												{
													"key": "pluginName",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get grafana plugin by name.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic\n*   token auth\n*   oauth token\n*   authenticated api user\n    \n\n**Responses**\n\n***200*** - get available grafana plugins\n\n***403*** - You do not have permission to perform this action\n\n***404*** - grafana plugin not found"
									},
									"response": [
										{
											"name": "Get avaivable grafana plugins",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"grafana-plugins",
														":pluginName"
													],
													"variable": [
														{
															"key": "pluginName",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got grafana plugins\",\n  \"plugin\": {\n    \"name\": \"Test Plugin\",\n    \"description\": \"Test Description\"\n  }\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"grafana-plugins",
														":pluginName"
													],
													"variable": [
														{
															"key": "pluginName",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Grafana plugin not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"grafana-plugins",
														":pluginName"
													],
													"variable": [
														{
															"key": "pluginName",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Grafana plugin not found\"\n}"
										}
									]
								},
								{
									"name": "v1 grafana-plugins update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"sint ut occaecat commodo\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grafana-plugins",
												":pluginName"
											],
											"variable": [
												{
													"key": "pluginName",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Update grafana plugins for instance.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic\n*   token auth\n    \n\n**Responses**\n\n***200*** - the grafana plugin was successfully updated\n\n***400*** - something went wrong updating grafana plugin\n\n***403*** - you are not authorized\n\n***404*** - frafana plugin not found"
									},
									"response": [
										{
											"name": "The grafana plugin was successfully updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"sint ut occaecat commodo\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"grafana-plugins",
														":pluginName"
													],
													"variable": [
														{
															"key": "pluginName",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully updated grafana plugin\",\n  \"plugin\": {\n    \"name\": \"Test Plugin\",\n    \"description\": \"This is a Test Plugin\"\n  }\n}"
										},
										{
											"name": "Something went wrong updating Grafana plugin.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"sint ut occaecat commodo\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"grafana-plugins",
														":pluginName"
													],
													"variable": [
														{
															"key": "pluginName",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"json body is not valid\"\n}"
										},
										{
											"name": "You are not authorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"sint ut occaecat commodo\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"grafana-plugins",
														":pluginName"
													],
													"variable": [
														{
															"key": "pluginName",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Grafana plugin not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"sint ut occaecat commodo\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"grafana-plugins",
														":pluginName"
													],
													"variable": [
														{
															"key": "pluginName",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Grafana plugin not found\"\n}"
										}
									]
								},
								{
									"name": "v1 grafana-plugins delete",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grafana-plugins",
												":pluginName"
											],
											"variable": [
												{
													"key": "pluginName",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete grafana plugins for instance.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic\n*   token auth\n    \n\n**Responses**\n\n***202*** - the grafana plugin has been deleted successfully\n\n***403*** - you are not authorized\n\n***404*** - grafana plugin not found"
									},
									"response": [
										{
											"name": "The grafana plugin has been deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"grafana-plugins",
														":pluginName"
													],
													"variable": [
														{
															"key": "pluginName",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully deleted grafana plugin\"\n}"
										},
										{
											"name": "You are not authorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"grafana-plugins",
														":pluginName"
													],
													"variable": [
														{
															"key": "pluginName",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Grafana plugin not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/grafana-plugins/:pluginName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"grafana-plugins",
														":pluginName"
													],
													"variable": [
														{
															"key": "pluginName",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Grafana plugin not found\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "v1 grafana-plugins list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/grafana-plugins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grafana-plugins"
									]
								},
								"description": "Get grafana plugins for instance.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic\n*   token auth\n*   oauth token\n*   autenticated api user\n    \n\n**Responses**\n\n***200*** - get available grafana plugins\n\n***403*** - permission denied"
							},
							"response": [
								{
									"name": "Get avaivable grafana plugins",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grafana-plugins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grafana-plugins"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Successfully got grafana plugins\",\n  \"plugins\": [\n    {\n      \"name\": \"Test Plugin\",\n      \"description\": \"Test Description\"\n    }\n  ]\n}"
								},
								{
									"name": "You do not have permission to perform this action.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/grafana-plugins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grafana-plugins"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
								}
							]
						},
						{
							"name": "v1 grafana-plugins create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"mollit\",\n  \"description\": \"Duis culpa\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/grafana-plugins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"grafana-plugins"
									]
								},
								"description": "Create grafana plugins for instance.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic\n*   token auth\n    \n\n**Responses**\n\n***201*** - the grafana plugin has geen created successfully\n\n***400*** - Something went wrong creating grafana plugin\n\n***403*** - You are not authorized"
							},
							"response": [
								{
									"name": "The Grafana plugin has been created successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts admin basic + token auth.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"mollit\",\n  \"description\": \"Duis culpa\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/grafana-plugins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grafana-plugins"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Grafana Plugin Created\",\n  \"plugin\": {\n    \"name\": \"Test Plugin\",\n    \"description\": \"This is a Test Plugin\"\n  }\n}"
								},
								{
									"name": "Something went wrong creating Grafana plugin.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts admin basic + token auth.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"mollit\",\n  \"description\": \"Duis culpa\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/grafana-plugins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grafana-plugins"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Json body is not valid\"\n}"
								},
								{
									"name": "You are not authorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts admin basic + token auth.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"mollit\",\n  \"description\": \"Duis culpa\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/grafana-plugins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"grafana-plugins"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "instances",
					"item": [
						{
							"name": "{instance Id}",
							"item": [
								{
									"name": "alertconfigs",
									"item": [
										{
											"name": "receivers",
											"item": [
												{
													"name": "{receiver}",
													"item": [
														{
															"name": "v1 instances alertconfigs receivers read",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Get alert receiver config for single alert receiver.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert config receiver\n\n***403*** - you are not authorized\n\n***404*** - alert config receiver not found"
															},
															"response": [
																{
																	"name": "Get alert config receiver",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"receivers",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"name\": \"team-X-mails\",\n    \"emailConfigs\": [\n      {\n        \"to\": \"team-X+alerts@example.org\"\n      }\n    ]\n  }\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"receivers",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert config receiver not found.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"receivers",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Alert config receiver not found\"\n}"
																}
															]
														},
														{
															"name": "v1 instances alertconfigs receivers update",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"occaecat\",\n  \"emailConfigs\": [\n    {\n      \"to\": \"est incididunt\",\n      \"from\": \"Excepteur anim deserunt do id\",\n      \"smarthost\": \"Lorem dolore in cillum Duis\",\n      \"authUsername\": \"enim\",\n      \"authPassword\": \"in sed\",\n      \"authIdentity\": \"sit dolor\"\n    },\n    {\n      \"to\": \"reprehenderit irure\",\n      \"from\": \"in Lorem anim\",\n      \"smarthost\": \"Lorem dolor voluptate irure eiusmod\",\n      \"authUsername\": \"eiusmod occaecat irure ex\",\n      \"authPassword\": \"culpa laborum ut id\",\n      \"authIdentity\": \"do aliqua ipsum in ut\"\n    }\n  ],\n  \"opsgenieConfigs\": [\n    {\n      \"apiKey\": \"minim officia Lorem\",\n      \"apiUrl\": \"in minim dolore Excepteur\",\n      \"tags\": \"et laboris occaecat\"\n    },\n    {\n      \"apiKey\": \"ex\",\n      \"apiUrl\": \"officia in sunt\",\n      \"tags\": \"proident\"\n    }\n  ],\n  \"webHookConfigs\": [\n    {\n      \"url\": \"ipsum sint\",\n      \"msTeams\": false\n    },\n    {\n      \"url\": \"officia ea in amet aliqua\",\n      \"msTeams\": false\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Update alert receiver config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   baerer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update alert config receiver\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert config not found"
															},
															"response": [
																{
																	"name": "Update alert config receiver.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"receivers",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Success\",\n  \"data\": [\n    {\n      \"name\": \"team-X-mails\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+papers@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-Y-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-Y+paper@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-pager\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts-critical@example.org\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"12345678\",\n          \"apiUrl\": \"https://example.opsgenie.org\"\n        }\n      ]\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"receivers",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Something went wrong\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"receivers",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert config not found.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"receivers",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Instance not found\"\n}"
																}
															]
														},
														{
															"name": "v1 instances alertconfigs receivers delete",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Delete alert receiver.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert config receiver\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
															},
															"response": [
																{
																	"name": "Delete alert config receiver.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"receivers",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Success\",\n  \"data\": [\n    {\n      \"name\": \"team-X-mails\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+papers@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-Y-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-Y+paper@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-pager\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts-critical@example.org\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"12345678\",\n          \"apiUrl\": \"https://example.opsgenie.org\"\n        }\n      ]\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"receivers",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Something went wrong\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"receivers",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Instance not found.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"receivers",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Instance not found\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "v1 instances alertconfigs receivers list",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get alert receiver config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - ger alert config receivers\n\n***400*** - something went wrong getting alert config receivers\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
													},
													"response": [
														{
															"name": "Get alert config receivers",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Success\",\n  \"data\": [\n    {\n      \"name\": \"team-X-mails\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+papers@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-Y-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-Y+paper@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-pager\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts-critical@example.org\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"12345678\",\n          \"apiUrl\": \"https://example.opsgenie.org\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong getting alert config receivers.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not get alert config receiver\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Instance not found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Instance not found\"\n}"
														}
													]
												},
												{
													"name": "v1 instances alertconfigs receivers create",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"pariatur\",\n  \"emailConfigs\": [\n    {\n      \"to\": \"eu\",\n      \"from\": \"magna consectetur in dolore\",\n      \"smarthost\": \"in laboris in\",\n      \"authUsername\": \"eiusmod mollit\",\n      \"authPassword\": \"veniam adipisicing Ut fugiat\",\n      \"authIdentity\": \"minim ad occaecat consequat m\"\n    },\n    {\n      \"to\": \"ullamco do irure in\",\n      \"from\": \"voluptate occaecat adipisicing quis\",\n      \"smarthost\": \"commodo veniam magna quis culpa\",\n      \"authUsername\": \"est veniam\",\n      \"authPassword\": \"cillum dolor nostrud\",\n      \"authIdentity\": \"sunt velit\"\n    }\n  ],\n  \"opsgenieConfigs\": [\n    {\n      \"apiKey\": \"et irure Duis Lorem non\",\n      \"apiUrl\": \"irure cillum amet in\",\n      \"tags\": \"pariatur do\"\n    },\n    {\n      \"apiKey\": \"id pariatur enim\",\n      \"apiUrl\": \"ut nulla mollit\",\n      \"tags\": \"laborum aliqua adipisicing consectetur\"\n    }\n  ],\n  \"webHookConfigs\": [\n    {\n      \"url\": \"Lorem aute dolor ipsum\",\n      \"msTeams\": false\n    },\n    {\n      \"url\": \"do ex ipsum dolore\",\n      \"msTeams\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Create alert receiver.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   baerer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert config receiver\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
													},
													"response": [
														{
															"name": "Create alert config receiver.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Success\",\n  \"data\": [\n    {\n      \"name\": \"team-X-mails\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+papers@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-Y-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-Y+paper@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-pager\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts-critical@example.org\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"12345678\",\n          \"apiUrl\": \"https://example.opsgenie.org\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Something went wrong\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Instance not found.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/receivers",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Instance not found\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "routes",
											"item": [
												{
													"name": "{receiver}",
													"item": [
														{
															"name": "v1 instances alertconfigs routes read",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Get alert route config for single route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert config receiver\n\n***403*** - you are not authorized\n\n***404*** - alert config receiver not found"
															},
															"response": [
																{
																	"name": "Get alert config route",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"groupBy\": [\n      \"alertname\",\n      \"cluster\",\n      \"service\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"3h\",\n    \"receiver\": \"team-X-mails\",\n    \"routes\": [\n      {\n        \"matchRe\": {\n          \"service\": \"^(foo1|foo2|baz)$\"\n        },\n        \"receiver\": \"team-X-paper\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-X-paper\",\n            \"routes\": [\n              {\n                \"match\": {\n                  \"severity\": \"warning\"\n                },\n                \"receiver\": \"team-X-paper\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"match\": {\n          \"service\": \"files\"\n        },\n        \"receiver\": \"team-X-pager\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-Y-paper\"\n          }\n        ]\n      }\n    ]\n  }\n}"
																},
																{
																	"name": "Something went wrong getting alert config route.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not get alert config receiver\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Instance not found.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Instance not found\"\n}"
																}
															]
														},
														{
															"name": "v1 instances alertconfigs routes update",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"receiver\": \"enim nisi\",\n  \"groupBy\": [\n    \"aliquip pa\",\n    \"pariatur Lorem laboris ut\"\n  ],\n  \"groupWait\": \"30s\",\n  \"groupInterval\": \"5m\",\n  \"repeatInterval\": \"4h\",\n  \"match\": {},\n  \"matchRe\": {},\n  \"routes\": [\n    {\n      \"receiver\": \"Excepteur in adipisicing Ut\",\n      \"groupBy\": [\n        \"consectetur qui\",\n        \"cupidatat eiusmod consequat velit\"\n      ],\n      \"groupWait\": \"d\",\n      \"groupInterval\": \"culpa\",\n      \"repeatInterval\": \"anim d\",\n      \"match\": {},\n      \"matchRe\": {}\n    },\n    {\n      \"receiver\": \"ipsum consectetur nostrud\",\n      \"groupBy\": [\n        \"laboris non in\",\n        \"sunt adipisicing incididunt\"\n      ],\n      \"groupWait\": \"ame\",\n      \"groupInterval\": \"ulla\",\n      \"repeatInterval\": \"officia\",\n      \"match\": {},\n      \"matchRe\": {}\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Update alert route of routes in route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update alert config receiver\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert config not found"
															},
															"response": [
																{
																	"name": "Update alert config route.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"groupBy\": [\n      \"alertname\",\n      \"cluster\",\n      \"service\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"3h\",\n    \"receiver\": \"team-X-mails\",\n    \"routes\": [\n      {\n        \"matchRe\": {\n          \"service\": \"^(foo1|foo2|baz)$\"\n        },\n        \"receiver\": \"team-X-paper\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-X-paper\",\n            \"routes\": [\n              {\n                \"match\": {\n                  \"severity\": \"warning\"\n                },\n                \"receiver\": \"team-X-paper\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"match\": {\n          \"service\": \"files\"\n        },\n        \"receiver\": \"team-X-pager\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-Y-paper\"\n          }\n        ]\n      }\n    ]\n  }\n}"
																},
																{
																	"name": "Something went wrong.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Something went wrong\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert config not found.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Instance not found\"\n}"
																}
															]
														},
														{
															"name": "v1 instances alertconfigs routes delete",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Delete alert route in routes of route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Response**\n\n***202*** - delete alert config receiver\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
															},
															"response": [
																{
																	"name": "Delete alert config route.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"groupBy\": [\n      \"alertname\",\n      \"cluster\",\n      \"service\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"3h\",\n    \"receiver\": \"team-X-mails\",\n    \"routes\": [\n      {\n        \"matchRe\": {\n          \"service\": \"^(foo1|foo2|baz)$\"\n        },\n        \"receiver\": \"team-X-paper\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-X-paper\",\n            \"routes\": [\n              {\n                \"match\": {\n                  \"severity\": \"warning\"\n                },\n                \"receiver\": \"team-X-paper\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"match\": {\n          \"service\": \"files\"\n        },\n        \"receiver\": \"team-X-pager\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-Y-paper\"\n          }\n        ]\n      }\n    ]\n  }\n}"
																},
																{
																	"name": "Something went wrong.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Something went wrong\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Instance not found.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes/:receiver",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertconfigs",
																				"routes",
																				":receiver"
																			],
																			"variable": [
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "receiver",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Instance not found\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "v1 instances alertconfigs routes list",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get alert route config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert config route\n\n***400*** - something went wrong getting alert config route.\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
													},
													"response": [
														{
															"name": "Get alert config route",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"groupBy\": [\n      \"alertname\",\n      \"cluster\",\n      \"service\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"3h\",\n    \"receiver\": \"team-X-mails\",\n    \"routes\": [\n      {\n        \"matchRe\": {\n          \"service\": \"^(foo1|foo2|baz)$\"\n        },\n        \"receiver\": \"team-X-paper\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-X-paper\",\n            \"routes\": [\n              {\n                \"match\": {\n                  \"severity\": \"warning\"\n                },\n                \"receiver\": \"team-X-paper\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"match\": {\n          \"service\": \"files\"\n        },\n        \"receiver\": \"team-X-pager\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-Y-paper\"\n          }\n        ]\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Something went wrong getting alert config route.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not get alert config receiver\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Instance not found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Instance not found\"\n}"
														}
													]
												},
												{
													"name": "v1 instances alertconfigs routes create",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"receiver\": \"cillum sunt sed voluptate\",\n  \"groupBy\": [\n    \"Lorem aliqua deserunt tempor\",\n    \"sed cillum\"\n  ],\n  \"groupWait\": \"30s\",\n  \"groupInterval\": \"5m\",\n  \"repeatInterval\": \"4h\",\n  \"match\": {},\n  \"matchRe\": {},\n  \"routes\": [\n    {\n      \"receiver\": \"culpa\",\n      \"groupBy\": [\n        \"elit magna\",\n        \"ipsum sit voluptate\"\n      ],\n      \"groupWait\": \"a\",\n      \"groupInterval\": \"Dui\",\n      \"repeatInterval\": \"conseq\",\n      \"match\": {},\n      \"matchRe\": {}\n    },\n    {\n      \"receiver\": \"qui\",\n      \"groupBy\": [\n        \"Lorem\",\n        \"aute\"\n      ],\n      \"groupWait\": \"id E\",\n      \"groupInterval\": \"Duis i\",\n      \"repeatInterval\": \"in \",\n      \"match\": {},\n      \"matchRe\": {}\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Create alert route in routes of route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert config route\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
													},
													"response": [
														{
															"name": "Create alert config route.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"groupBy\": [\n      \"alertname\",\n      \"cluster\",\n      \"service\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"3h\",\n    \"receiver\": \"team-X-mails\",\n    \"routes\": [\n      {\n        \"matchRe\": {\n          \"service\": \"^(foo1|foo2|baz)$\"\n        },\n        \"receiver\": \"team-X-paper\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-X-paper\",\n            \"routes\": [\n              {\n                \"match\": {\n                  \"severity\": \"warning\"\n                },\n                \"receiver\": \"team-X-paper\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"match\": {\n          \"service\": \"files\"\n        },\n        \"receiver\": \"team-X-pager\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-Y-paper\"\n          }\n        ]\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Something went wrong.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Something went wrong\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Instance not found.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs/routes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Instance not found\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "v1 instances alertconfigs list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"alertconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get alert rule config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token fom admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert group\n\n***400*** - something went wrong updating the alert config\n\n***403*** - you are not authorized\n\n***404*** - alert config not found"
											},
											"response": [
												{
													"name": "Get alert group",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"global\": {\n      \"smtpSmarthost\": \"localhost:25\",\n      \"smtpFrom\": \"alertmanager@example.org\",\n      \"smtpAuthUsername\": \"alertmanager\",\n      \"smtpAuthPassword\": \"password\"\n    },\n    \"route\": {\n      \"groupBy\": [\n        \"alertname\",\n        \"cluster\",\n        \"service\"\n      ],\n      \"groupWait\": \"30s\",\n      \"groupInterval\": \"5m\",\n      \"repeatInterval\": \"3h\",\n      \"receiver\": \"team-X-mails\",\n      \"routes\": [\n        {\n          \"matchRe\": {\n            \"service\": \"^(foo1|foo2|baz)$\"\n          },\n          \"receiver\": \"team-X-paper\",\n          \"routes\": [\n            {\n              \"match\": {\n                \"severity\": \"critical\"\n              },\n              \"receiver\": \"team-X-paper\",\n              \"routes\": [\n                {\n                  \"match\": {\n                    \"severity\": \"warning\"\n                  },\n                  \"receiver\": \"team-X-paper\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"match\": {\n            \"service\": \"files\"\n          },\n          \"receiver\": \"team-X-pager\",\n          \"routes\": [\n            {\n              \"match\": {\n                \"severity\": \"critical\"\n              },\n              \"receiver\": \"team-Y-paper\"\n            }\n          ]\n        }\n      ]\n    },\n    \"inhibitRules\": [\n      {\n        \"sourceMatch\": {\n          \"severity\": \"criticals\"\n        },\n        \"targetMatch\": {\n          \"severity\": \"warning\"\n        },\n        \"equal\": [\n          \"alertname\",\n          \"cluster\",\n          \"service\"\n        ]\n      }\n    ],\n    \"receivers\": [\n      {\n        \"name\": \"team-X-mails\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+alerts@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-X-paper\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+papers@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-Y-paper\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-Y+paper@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-X-pager\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+alerts-critical@example.org\"\n          }\n        ],\n        \"opsgenieConfigs\": [\n          {\n            \"apiKey\": \"12345678\",\n            \"apiUrl\": \"https://example.opsgenie.org\"\n          }\n        ]\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Something went wrong updating the alert config.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not update alert config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Alert config not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
												}
											]
										},
										{
											"name": "v1 instances alertconfigs update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"route\": {\n    \"receiver\": \"cillum dolor sit culpa\",\n    \"groupBy\": [\n      \"dolor Excepteur\",\n      \"dolor adipisicing laboris\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"4h\",\n    \"match\": {},\n    \"matchRe\": {},\n    \"routes\": [\n      {\n        \"receiver\": \"ut pariatur\",\n        \"groupBy\": [\n          \"aute dolore laborum\",\n          \"eiusmod ea reprehenderit mollit fugiat\"\n        ],\n        \"groupWait\": \"L\",\n        \"groupInterval\": \"Exce\",\n        \"repeatInterval\": \"exerc\",\n        \"match\": {},\n        \"matchRe\": {}\n      },\n      {\n        \"receiver\": \"id officia commodo\",\n        \"groupBy\": [\n          \"laborum q\",\n          \"nulla sunt ad\"\n        ],\n        \"groupWait\": \"re\",\n        \"groupInterval\": \"veniam o\",\n        \"repeatInterval\": \"minim\",\n        \"match\": {},\n        \"matchRe\": {}\n      }\n    ]\n  },\n  \"receivers\": [\n    {\n      \"name\": \"labore ullamco cillum\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"velit fugiat culpa ullamco\",\n          \"from\": \"dolore velit dolor do\",\n          \"smarthost\": \"qui eu\",\n          \"authUsername\": \"commodo sit\",\n          \"authPassword\": \"velit Ut nisi\",\n          \"authIdentity\": \"culpa sint\"\n        },\n        {\n          \"to\": \"in fugiat enim tempor\",\n          \"from\": \"cillum id non ea\",\n          \"smarthost\": \"ex occaecat aliqua\",\n          \"authUsername\": \"in deserunt nostrud a\",\n          \"authPassword\": \"est Excepteur incididunt\",\n          \"authIdentity\": \"ut officia do nostrud minim\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"consectetur aliqua\",\n          \"apiUrl\": \"velit sed minim\",\n          \"tags\": \"commodo consequ\"\n        },\n        {\n          \"apiKey\": \"et incididunt in\",\n          \"apiUrl\": \"in exercitation esse anim\",\n          \"tags\": \"velit irure deserunt mollit\"\n        }\n      ],\n      \"webHookConfigs\": [\n        {\n          \"url\": \"quis labore mollit eu\",\n          \"msTeams\": false\n        },\n        {\n          \"url\": \"est ex laboris non\",\n          \"msTeams\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"nulla pariatur\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"mollit culpa\",\n          \"from\": \"commodo occaecat sed velit nisi\",\n          \"smarthost\": \"sint culpa et voluptate\",\n          \"authUsername\": \"Lorem in\",\n          \"authPassword\": \"consectetur laborum pariatur commodo\",\n          \"authIdentity\": \"id\"\n        },\n        {\n          \"to\": \"esse mollit tempor\",\n          \"from\": \"fugiat irure tempor exercitation velit\",\n          \"smarthost\": \"sed consectetur labore esse\",\n          \"authUsername\": \"ut sint reprehenderit do\",\n          \"authPassword\": \"consectetur ad amet\",\n          \"authIdentity\": \"voluptate est deserunt cillum\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"veniam\",\n          \"apiUrl\": \"non irure quis occaecat adipisicing\",\n          \"tags\": \"nulla laborum consectetur ut\"\n        },\n        {\n          \"apiKey\": \"veniam\",\n          \"apiUrl\": \"labore Excepteur ut irure\",\n          \"tags\": \"Duis dolore in\"\n        }\n      ],\n      \"webHookConfigs\": [\n        {\n          \"url\": \"ipsum laboris sunt\",\n          \"msTeams\": false\n        },\n        {\n          \"url\": \"amet\",\n          \"msTeams\": false\n        }\n      ]\n    }\n  ],\n  \"global\": {\n    \"resolveTimeout\": \"5m\",\n    \"smtpFrom\": \"elit\",\n    \"smtpSmarthost\": \"cillum qui\",\n    \"smtpAuthUsername\": \"ut exercitation ut minim pariatur\",\n    \"smtpAuthPassword\": \"adipisicing ut\",\n    \"smtpAuthIdentity\": \"nulla\",\n    \"opsgenieApiKey\": \"proident anim sit magna sunt\",\n    \"opsgenieApiUrl\": \"Excepteur cupidatat enim consequat\"\n  },\n  \"inhibitRules\": {\n    \"sourceMatch\": {},\n    \"sourceMatchRe\": {},\n    \"targetMatch\": {},\n    \"targetMatchRe\": {},\n    \"equal\": [\n      \"occaecat minim anim\",\n      \"deserunt\"\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"alertconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Update alert config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - update alert group\n\n***400*** - something went wrong updating the alert config\n\n***403*** - you are not authorized\n\n***404*** - alert config not found"
											},
											"response": [
												{
													"name": "Update alert group.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"global\": {\n      \"smtpSmarthost\": \"localhost:25\",\n      \"smtpFrom\": \"alertmanager@example.org\",\n      \"smtpAuthUsername\": \"alertmanager\",\n      \"smtpAuthPassword\": \"password\"\n    },\n    \"route\": {\n      \"groupBy\": [\n        \"alertname\",\n        \"cluster\",\n        \"service\"\n      ],\n      \"groupWait\": \"30s\",\n      \"groupInterval\": \"5m\",\n      \"repeatInterval\": \"3h\",\n      \"receiver\": \"team-X-mails\",\n      \"routes\": [\n        {\n          \"matchRe\": {\n            \"service\": \"^(foo1|foo2|baz)$\"\n          },\n          \"receiver\": \"team-X-paper\",\n          \"routes\": [\n            {\n              \"match\": {\n                \"severity\": \"critical\"\n              },\n              \"receiver\": \"team-X-paper\",\n              \"routes\": [\n                {\n                  \"match\": {\n                    \"severity\": \"warning\"\n                  },\n                  \"receiver\": \"team-X-paper\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"match\": {\n            \"service\": \"files\"\n          },\n          \"receiver\": \"team-X-pager\",\n          \"routes\": [\n            {\n              \"match\": {\n                \"severity\": \"critical\"\n              },\n              \"receiver\": \"team-Y-paper\"\n            }\n          ]\n        }\n      ]\n    },\n    \"inhibitRules\": [\n      {\n        \"sourceMatch\": {\n          \"severity\": \"criticals\"\n        },\n        \"targetMatch\": {\n          \"severity\": \"warning\"\n        },\n        \"equal\": [\n          \"alertname\",\n          \"cluster\",\n          \"service\"\n        ]\n      }\n    ],\n    \"receivers\": [\n      {\n        \"name\": \"team-X-mails\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+alerts@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-X-paper\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+papers@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-Y-paper\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-Y+paper@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-X-pager\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+alerts-critical@example.org\"\n          }\n        ],\n        \"opsgenieConfigs\": [\n          {\n            \"apiKey\": \"12345678\",\n            \"apiUrl\": \"https://example.opsgenie.org\"\n          }\n        ]\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Something went wrong updating the alert config.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not update alert config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Alert config not found.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "alertgroups",
									"item": [
										{
											"name": "{group Name}",
											"item": [
												{
													"name": "alertrules",
													"item": [
														{
															"name": "{alert Name}",
															"item": [
																{
																	"name": "v1 instances alertgroups alertrules read",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "Get alert rule config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert rules\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rule not found"
																	},
																	"response": [
																		{
																			"name": "Get alert rules",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Successfully got alert rules\",\n  \"data\": {\n    \"alert\": \"up test\",\n    \"expr\": \"up == 1\",\n    \"labels\": {\n      \"test\": \"test\"\n    },\n    \"for\": \"30s\",\n    \"annotations\": {\n      \"test\": \"test\"\n    }\n  }\n}"
																		},
																		{
																			"name": "Something went wrong.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
																		},
																		{
																			"name": "Accepts admin basic + token auth and oauth token.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																		},
																		{
																			"name": "Alert rule not found.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Could not read alert rule config\"\n}"
																		}
																	]
																},
																{
																	"name": "v1 instances alertgroups alertrules update",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"expr\": \"sed et laboris\",\n  \"for\": \"0s\",\n  \"labels\": {},\n  \"annotations\": {}\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "Update alert rule config."
																	},
																	"response": [
																		{
																			"name": "Update alert rules.",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Accepted",
																			"code": 202,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Alert rule updated successfully\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																		},
																		{
																			"name": "Something went wrong updating the alert rule.",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Could not update alert rule config\"\n}"
																		},
																		{
																			"name": "Accepts admin basic + token auth and oauth token.",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																		},
																		{
																			"name": "Alert rule not found.",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Could not update alert rule config\"\n}"
																		}
																	]
																},
																{
																	"name": "v1 instances alertgroups alertrules delete",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "Delete alert rule config."
																	},
																	"response": [
																		{
																			"name": "Delete alert rule.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Accepted",
																			"code": 202,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Alert rules successfully deleted\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																		},
																		{
																			"name": "Something went wrong deleting the alert rule.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Could not delete alert rule config\"\n}"
																		},
																		{
																			"name": "Accepts admin basic + token auth and oauth token.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																		},
																		{
																			"name": "Alert rule not found.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"alertrules",
																						":alertName"
																					],
																					"variable": [
																						{
																							"key": "alertName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Could not delete alert rule config\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "v1 instances alertgroups alertrules list",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Get alert rule config."
															},
															"response": [
																{
																	"name": "Get all alert rules",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Successfully got alert rules\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not read alert rule config\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert rules not found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not read alert rule config\"\n}"
																}
															]
														},
														{
															"name": "v1 instances alertgroups alertrules create",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alert\": \"Ut velit\",\n  \"expr\": \"tempor\",\n  \"for\": \"0s\",\n  \"labels\": {},\n  \"annotations\": {}\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Create alert rule config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert rule\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
															},
															"response": [
																{
																	"name": "Create alert rule.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Rule successfully created\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not create alert rule config\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert rules not found",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not create alert group config\"\n}"
																}
															]
														},
														{
															"name": "v1 instances alertgroups alertrules partial update",
															"request": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"alert\": \"ullamco ut labore Excepteur\",\n    \"expr\": \"dolor esse\",\n    \"for\": \"0s\",\n    \"labels\": {},\n    \"annotations\": {}\n  },\n  {\n    \"alert\": \"in\",\n    \"expr\": \"nisi\",\n    \"for\": \"0s\",\n    \"labels\": {},\n    \"annotations\": {}\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Patch alert rules.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert rules\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
															},
															"response": [
																{
																	"name": "Create alert rules.",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Rules successfully created\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not create alert rule config\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert rules not found",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Alert group not found\"\n}"
																}
															]
														},
														{
															"name": "v1 instances alertgroups alertrules delete",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules?alertName=ad anim amet in,deserunt incididunt id eiusmod",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"query": [
																		{
																			"key": "alertName",
																			"value": "ad anim amet in,deserunt incididunt id eiusmod",
																			"description": "(Required) Name of the alert rules that should be deleted"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Delete alert rules.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert rules\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
															},
															"response": [
																{
																	"name": "Delete alert rules.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules?alertName=minim,et consequat in commodo",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"query": [
																				{
																					"key": "alertName",
																					"value": "minim,et consequat in commodo"
																				}
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Rules successfully deleted\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules?alertName=minim,et consequat in commodo",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"query": [
																				{
																					"key": "alertName",
																					"value": "minim,et consequat in commodo"
																				}
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not delete alert rule config\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules?alertName=minim,et consequat in commodo",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"query": [
																				{
																					"key": "alertName",
																					"value": "minim,et consequat in commodo"
																				}
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert rules not found",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/alertrules?alertName=minim,et consequat in commodo",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules"
																			],
																			"query": [
																				{
																					"key": "alertName",
																					"value": "minim,et consequat in commodo"
																				}
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Alert group not found\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "records",
													"item": [
														{
															"name": "{alert Record}",
															"item": [
																{
																	"name": "v1 instances alertgroups records read",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "Get record.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get record\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rule not found"
																	},
																	"response": [
																		{
																			"name": "Get record.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Successfully got record\",\n  \"data\": {\n    \"record\": \"job:prometheus_http_requests_total:rate5m\",\n    \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n    \"labels\": {\n      \"test\": \"test\"\n    }\n  }\n}"
																		},
																		{
																			"name": "Something went wrong.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Could not read record\"\n}"
																		},
																		{
																			"name": "Accepts admin basic + token auth and oauth token.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																		},
																		{
																			"name": "Alert rule not found.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Record not found.\"\n}"
																		}
																	]
																},
																{
																	"name": "v1 instances alertgroups records update",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"expr\": \"eu in in deserunt\",\n  \"labels\": {}\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "Update record.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update alert record\n\n***400*** - something went wrong updating the record\n\n***403*** - you are not authorized\n\n***404*** - alert record not found"
																	},
																	"response": [
																		{
																			"name": "Update alert record.",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Accepted",
																			"code": 202,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Record updated successfully\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																		},
																		{
																			"name": "Something went wrong updating the record.",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Could not update record\"\n}"
																		},
																		{
																			"name": "Accepts admin basic + token auth and oauth token.",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																		},
																		{
																			"name": "Alert record not found.",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Record not found\"\n}"
																		}
																	]
																},
																{
																	"name": "v1 instances alertgroups records delete",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "Delete record.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete records\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
																	},
																	"response": [
																		{
																			"name": "Delete record.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Accepted",
																			"code": 202,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Record successfully deleted\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																		},
																		{
																			"name": "Something went wrong deleting the alert rule.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Bad Request",
																			"code": 400,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Could not delete record\"\n}"
																		},
																		{
																			"name": "Accepts admin basic + token auth and oauth token.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																		},
																		{
																			"name": "Alert record not found.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: basic",
																						"key": "Authorization",
																						"value": "Basic <credentials>"
																					},
																					{
																						"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																						"key": "Authorization",
																						"value": "deserunt"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"instances",
																						":instanceId",
																						"alertgroups",
																						":groupName",
																						"records",
																						":alertRecord"
																					],
																					"variable": [
																						{
																							"key": "alertRecord",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "groupName",
																							"value": "deserunt",
																							"description": "(Required) "
																						},
																						{
																							"key": "instanceId",
																							"value": "deserunt",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"Could not delete record\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "v1 instances alertgroups records list",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Get records.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get all records\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert group not found"
															},
															"response": [
																{
																	"name": "Get all records",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Successfully got records\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not read records\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert group not found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Alert group not found\"\n}"
																}
															]
														},
														{
															"name": "v1 instances alertgroups records create",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"record\": \"ullamco enim commodo eiu\",\n  \"expr\": \"consectetur commodo\",\n  \"labels\": {}\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Create records.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create record\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert group not found"
															},
															"response": [
																{
																	"name": "Create record.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Record successfully created\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not create record\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert group not found",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could find alert group\"\n}"
																}
															]
														},
														{
															"name": "v1 instances alertgroups records partial update",
															"request": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"record\": \"aliqua id in\",\n    \"expr\": \"id sint sunt qui\",\n    \"labels\": {}\n  },\n  {\n    \"record\": \"id sit\",\n    \"expr\": \"sed nulla\",\n    \"labels\": {}\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Patch records.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create records\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert group not found"
															},
															"response": [
																{
																	"name": "Create records.",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Records successfully created\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not create records\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert group not found",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Alert group not found\"\n}"
																}
															]
														},
														{
															"name": "v1 instances alertgroups records delete",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records?alertRecord=ad anim amet in,deserunt incididunt id eiusmod",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"query": [
																		{
																			"key": "alertRecord",
																			"value": "ad anim amet in,deserunt incididunt id eiusmod",
																			"description": "(Required) Name of the records that should be deleted"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Delete records.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token fro oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete records\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
															},
															"response": [
																{
																	"name": "Delete records.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records?alertRecord=minim,et consequat in commodo",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"query": [
																				{
																					"key": "alertRecord",
																					"value": "minim,et consequat in commodo"
																				}
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Records successfully deleted\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records?alertRecord=minim,et consequat in commodo",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"query": [
																				{
																					"key": "alertRecord",
																					"value": "minim,et consequat in commodo"
																				}
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not delete record\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records?alertRecord=minim,et consequat in commodo",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"query": [
																				{
																					"key": "alertRecord",
																					"value": "minim,et consequat in commodo"
																				}
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert rules not found",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName/records?alertRecord=minim,et consequat in commodo",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records"
																			],
																			"query": [
																				{
																					"key": "alertRecord",
																					"value": "minim,et consequat in commodo"
																				}
																			],
																			"variable": [
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Alert group not found\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "v1 instances alertgroups read",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert group\n\n***400*** - something went wrong\n\n***403*** - you are not authorized"
													},
													"response": [
														{
															"name": "Get alert group",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Successfully got alert groups\",\n  \"data\": {\n    \"name\": \"test alert\",\n    \"interval\": \"5m\",\n    \"rules\": [\n      {\n        \"alert\": \"up test\",\n        \"expr\": \"up == 1\",\n        \"labels\": {\n          \"test\": \"test\"\n        },\n        \"for\": \"30s\",\n        \"annotations\": {\n          \"test\": \"test\"\n        }\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Something went wrong.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														}
													]
												},
												{
													"name": "v1 instances alertgroups update",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"alert\": \"Excepteur dolor\",\n      \"expr\": \"quis ad in\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    },\n    {\n      \"alert\": \"enim nulla\",\n      \"expr\": \"sit magna\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    }\n  ],\n  \"interval\": \"60s\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Update alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update alert group\n\n***400*** - something went wrong updating the alert group\n\n***403*** - you are not authorized\n\n***404*** - secret not found"
													},
													"response": [
														{
															"name": "Update alert group.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Alert group updated successfully\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong updating the alert group.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Secret not found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
														}
													]
												},
												{
													"name": "v1 instances alertgroups delete",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert group\n\n***400*** - could not create alert group\n\n***403*** - you are not authorized\n\n***404*** - alert group config not found"
													},
													"response": [
														{
															"name": "Delete alert group.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Alert group has been deleted successfully\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong deleting the alert group.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not delete alert group config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Secret for config not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not delete alert group config\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "v1 instances alertgroups list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get all alert groups\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - could not read alert group config"
											},
											"response": [
												{
													"name": "Get all alert groups",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got alert groups\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Could not read alert group config.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
												}
											]
										},
										{
											"name": "v1 instances alertgroups create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"sed proident sint\",\n  \"rules\": [\n    {\n      \"alert\": \"sunt velit dolor Excepteur dolor\",\n      \"expr\": \"reprehenderit anim\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    },\n    {\n      \"alert\": \"ipsum exercitation Lorem\",\n      \"expr\": \"ea proident qui\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    }\n  ],\n  \"interval\": \"60s\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Create alert group config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert group\n\n***400*** - could not create alert group config\n\n***403*** - you are not authorized\n\n***404*** - alert group config not found"
											},
											"response": [
												{
													"name": "Create alert group.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": true,\n  \"message\": \"Group successfully created\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Could not create alert group config",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not create alert group config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Alert group config not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not create alert group config\"\n}"
												}
											]
										},
										{
											"name": "v1 instances alertgroups partial update",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"Duis est exercitation sint\",\n    \"rules\": [\n      {\n        \"alert\": \"consectetur labore cillum\",\n        \"expr\": \"esse in proident\",\n        \"for\": \"0s\",\n        \"labels\": {},\n        \"annotations\": {}\n      },\n      {\n        \"alert\": \"non ex\",\n        \"expr\": \"Excepteur laborum\",\n        \"for\": \"0s\",\n        \"labels\": {},\n        \"annotations\": {}\n      }\n    ],\n    \"interval\": \"60s\"\n  },\n  {\n    \"name\": \"nostrud et dolor\",\n    \"rules\": [\n      {\n        \"alert\": \"veniam sunt\",\n        \"expr\": \"reprehenderit pariatur enim ut\",\n        \"for\": \"0s\",\n        \"labels\": {},\n        \"annotations\": {}\n      },\n      {\n        \"alert\": \"deserunt Duis\",\n        \"expr\": \"consectetur anim in id adipisicing\",\n        \"for\": \"0s\",\n        \"labels\": {},\n        \"annotations\": {}\n      }\n    ],\n    \"interval\": \"60s\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Patch alert groups route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert groups\n\n***400*** - could not create alert group\n\n***403*** - you are not authorized\n\n***404*** - alert group config not found"
											},
											"response": [
												{
													"name": "Create alert groups.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": true,\n  \"message\": \"Groups successfully patched.\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Could not create alert group",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not patch alert groups\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Alert group config not found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not patch alert groups\"\n}"
												}
											]
										},
										{
											"name": "v1 instances alertgroups delete",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups?groupName=ad anim amet in,deserunt incididunt id eiusmod",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"query": [
														{
															"key": "groupName",
															"value": "ad anim amet in,deserunt incididunt id eiusmod",
															"description": "(Required) Name of the groups that should be deleted"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete alert groups route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert group\n\n***400*** - could not create alert group????\n\n***403*** - you are not authorized\n\n***404*** - alert group config not found"
											},
											"response": [
												{
													"name": "Delete alert group.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups?groupName=minim,et consequat in commodo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"query": [
																{
																	"key": "groupName",
																	"value": "minim,et consequat in commodo"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": true,\n  \"message\": \"Group successfully deleted\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Could not create alert group",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups?groupName=minim,et consequat in commodo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"query": [
																{
																	"key": "groupName",
																	"value": "minim,et consequat in commodo"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not delete alert group\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups?groupName=minim,et consequat in commodo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"query": [
																{
																	"key": "groupName",
																	"value": "minim,et consequat in commodo"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Alert group config not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/alertgroups?groupName=minim,et consequat in commodo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"alertgroups"
															],
															"query": [
																{
																	"key": "groupName",
																	"value": "minim,et consequat in commodo"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not delete alert group\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "backup-retentions",
									"item": [
										{
											"name": "v1 instances backup-retentions list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"backup-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get backup retention.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth for instance\n    \n\n**Responses**\n\n***200*** - get backup retention\n\n***403*** - you do not have permission to perform this action\n\n***404*** - retention was not created"
											},
											"response": [
												{
													"name": "Get backup retention",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-retentions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-retentions"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got backup retention\",\n  \"alertConfigBackupRetention\": \"14d\",\n  \"scrapeConfigBackupRetention\": \"14d\",\n  \"alertRulesBackupRetention\": \"14d\",\n  \"grafanaBackupRetention\": \"14d\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-retentions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-retentions"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Retention was not created.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-retentions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-retentions"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"No retention created.\"\n}"
												}
											]
										},
										{
											"name": "v1 instances backup-retentions update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"retention\": \"ipsu\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-retentions?backupTarget=grafana,alertConfig",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"backup-retentions"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "grafana,alertConfig",
															"description": "List of backup targets"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Update backup retention.\n\n**Authorziation**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***202*** - create backup retention\n\n***400*** - something went wrong\n\n***403*** - you do not have permission to perform this action"
											},
											"response": [
												{
													"name": "Create backup retention",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-retentions?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-retentions"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Backup retention will be created\"\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-retentions?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-retentions"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Json body is not valid\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-retentions?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-retentions"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "backup-schedules",
									"item": [
										{
											"name": "{schedule Id}",
											"item": [
												{
													"name": "v1 instances backup-schedules update",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"schedule\": \"deserunt\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules/:scheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-schedules",
																":scheduleId"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "scheduleId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Update backup schedule.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***202*** - update backup schedule\n\n***403*** - you do not have permission to perform this action\n\n***404*** - backup schedule does not exists"
													},
													"response": [
														{
															"name": "Update backup schedule",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules/:scheduleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"backup-schedules",
																		":scheduleId"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "scheduleId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Backup schedule will be updated\",\n  \"schedule\": {\n    \"schedule\": \"1 * * * *\",\n    \"scheduleId\": \"f546eff4-3c8d-4664-9657-a6ad46edffe5\"\n  }\n}"
														},
														{
															"name": "You do not have permission to perform this action.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules/:scheduleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"backup-schedules",
																		":scheduleId"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "scheduleId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Backup schedule does not exists",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules/:scheduleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"backup-schedules",
																		":scheduleId"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "scheduleId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Backup schedule does not exists\"\n}"
														}
													]
												},
												{
													"name": "v1 instances backup-schedules delete",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules/:scheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-schedules",
																":scheduleId"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "scheduleId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete backup schedule.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***202*** - delete backup schedule\n\n***403*** - you do not have permission to perform this ation\n\n***404*** - backup schedule does not exists"
													},
													"response": [
														{
															"name": "Delete backup schedule",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules/:scheduleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"backup-schedules",
																		":scheduleId"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "scheduleId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Backup schedule will be deleted\"\n}"
														},
														{
															"name": "You do not have permission to perform this action.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules/:scheduleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"backup-schedules",
																		":scheduleId"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "scheduleId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Backup schedule does not exists",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules/:scheduleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"backup-schedules",
																		":scheduleId"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "scheduleId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Backup schedule does not exists\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "v1 instances backup-schedules list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules?backupTarget=grafana,alertConfig",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"backup-schedules"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "grafana,alertConfig",
															"description": "List of backup targets"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get backup schedules.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***200*** - get backup schedule\n\n***403*** - you do not have permission to perform this action\n\n***404*** - no backup schedule exists"
											},
											"response": [
												{
													"name": "Get backup schedule",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-schedules"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got backup schedule\",\n  \"alertConfigBackupSchedules\": [\n    {\n      \"schedule\": \"*/5 * * * *\",\n      \"scheduleId\": \"f546eff4-3c8d-4664-9657-a6ad46edffe5\"\n    },\n    {\n      \"schedule\": \"0 0 * * MON\",\n      \"scheduleId\": \"a3cddd87-a967-42ef-9413-041c731ac81a\"\n    }\n  ],\n  \"alertRulesBackupSchedules\": [\n    {\n      \"schedule\": \"*/5 * * * *\",\n      \"scheduleId\": \"f546eff4-3c8d-4664-9657-a6ad46edffe6\"\n    },\n    {\n      \"schedule\": \"0 0 * * MON\",\n      \"scheduleId\": \"a3cddd87-a967-42ef-9413-041c731ac81b\"\n    }\n  ],\n  \"scrapeConfigBackupSchedules\": [\n    {\n      \"schedule\": \"*/5 * * * *\",\n      \"scheduleId\": \"f546eff4-3c8d-4664-9657-a6ad46edffe7\"\n    },\n    {\n      \"schedule\": \"0 0 * * MON\",\n      \"scheduleId\": \"a3cddd87-a967-42ef-9413-041c731ac81c\"\n    }\n  ],\n  \"grafanaBackupSchedules\": [\n    {\n      \"schedule\": \"*/5 * * * *\",\n      \"scheduleId\": \"f546eff4-3c8d-4664-9657-a6ad46edffe8\"\n    },\n    {\n      \"schedule\": \"0 0 * * MON\",\n      \"scheduleId\": \"a3cddd87-a967-42ef-9413-041c731ac81d\"\n    }\n  ]\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-schedules"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "No Backup schedule exists",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-schedules"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"No Backup schedule exists\"\n}"
												}
											]
										},
										{
											"name": "v1 instances backup-schedules create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"schedule\": \"deserunt\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules?backupTarget=grafana,alertConfig",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"backup-schedules"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "grafana,alertConfig",
															"description": "List of backup targets"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Create backup schedules.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***202*** - create backup schedule\n\n***400*** - something went wrong\n\n***403*** - you do not have permission to perform this action"
											},
											"response": [
												{
													"name": "Create backup schedule",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-schedules"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Backup schedule will be created\",\n  \"schedule\": \"*/5 * * * *\"\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-schedules"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Json body is not valid\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backup-schedules"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "backups",
									"item": [
										{
											"name": "v1 instances backups list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/backups?backupTarget=grafana,alertConfig",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"backups"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "grafana,alertConfig",
															"description": "List of backup targets"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get backups.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***200*** - get all backups\n\n***400*** - something went wrong\n\n***403*** - you do not have permission to perform this action"
											},
											"response": [
												{
													"name": "Get all backups",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backups"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got backups\",\n  \"alertConfigBackups\": [\n    \"11-08-2021T14:08:21\",\n    \"14-08-2021T06:35:40\"\n  ],\n  \"alertRulesBackups\": [\n    \"11-08-2021T14:08:22\",\n    \"14-08-2021T06:35:41\"\n  ],\n  \"scrapeConfigBackups\": [\n    \"11-08-2021T14:08:23\",\n    \"14-08-2021T06:35:42\"\n  ],\n  \"grafanaBackups\": [\n    \"11-08-2021T14:08:31\",\n    \"14-08-2021T06:35:43\"\n  ]\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backups"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not get backups from storage\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backups"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										},
										{
											"name": "v1 instances backups create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/backups?backupTarget=grafana,alertConfig",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"backups"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "grafana,alertConfig",
															"description": "List of backup targets"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Create backup.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***202*** - create backup\n\n***400*** - something went wrong\n\n***403*** - you do not have permission to perform this action"
											},
											"response": [
												{
													"name": "Create backup",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backups"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Backup will be created\"\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backups"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Json body is not valid\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backups"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertConfig,grafana"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										},
										{
											"name": "v1 instances backups delete",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/backups/:backupDate?backupTarget=alertRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"backups",
														":backupDate"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertRules",
															"description": "(Required) Backup target selector"
														}
													],
													"variable": [
														{
															"key": "backupDate",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete backup."
											},
											"response": [
												{
													"name": "Delete backup",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backups/:backupDate?backupTarget=alertRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backups",
																":backupDate"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertRules"
																}
															],
															"variable": [
																{
																	"key": "backupDate",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Backup will be deleted\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backups/:backupDate?backupTarget=alertRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backups",
																":backupDate"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertRules"
																}
															],
															"variable": [
																{
																	"key": "backupDate",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Backup not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/backups/:backupDate?backupTarget=alertRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"backups",
																":backupDate"
															],
															"query": [
																{
																	"key": "backupTarget",
																	"value": "alertRules"
																}
															],
															"variable": [
																{
																	"key": "backupDate",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Backup not found\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "grafana-configs",
									"item": [
										{
											"name": "v1 instances grafana-configs list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/grafana-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"grafana-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get grafana configs for instance.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic + token auth\n*   oauth token\n*   authenticated api user\n    \n\n**Responses**\n\n***200*** - get grafana config\n\n***403*** - you do not have permission to perform this action"
											},
											"response": [
												{
													"name": "Get grafana config",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/grafana-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"grafana-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got grafana config\",\n  \"publicReadAccess\": false,\n  \"plugins\": [\n    \"Test Plugin\"\n  ]\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/grafana-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"grafana-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										},
										{
											"name": "v1 instances grafana-configs update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"publicReadAccess\": false,\n  \"plugins\": [\n    \"commodo incididu\",\n    \"ipsum aliquip\"\n  ],\n  \"genericOauth\": {\n    \"enabled\": false,\n    \"apiUrl\": \"dolor\",\n    \"authUrl\": \"esse mollit commodo\",\n    \"tokenUrl\": \"et quis\",\n    \"oauthClientId\": \"pariatur ullamco\",\n    \"oauthClientSecret\": \"Duis aute culpa est\",\n    \"roleAttributePath\": \"aliqua nisi\",\n    \"scopes\": \"openid profile email\",\n    \"roleAttributeStrict\": true\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/grafana-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"grafana-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Update grafana config.\n\n**Authorization**\n\nAccepts:\n\n*   admins basic + token auth\n*   oauth token\n*   authenticated api user\n    \n\n**Responses**\n\n***202*** - update grafana config\n\n***400*** - no valid json body\n\n***403*** - you do not have permission to perform this action\n\n***500*** - something went wrong during grafana config update"
											},
											"response": [
												{
													"name": "Update grafana config",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/grafana-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"grafana-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully updated grafana config\"\n}"
												},
												{
													"name": "No valid json body",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/grafana-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"grafana-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"No valid json body\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/grafana-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"grafana-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Something went wrong during grafana config update",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/grafana-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"grafana-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Something went wrong during grafana config update\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "logs-alertgroups",
									"item": [
										{
											"name": "{group Name}",
											"item": [
												{
													"name": "v1 instances logs-alertgroups read",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get logs alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert group\n\n***400*** - something went wrong\n\n***403*** - you are not authorized"
													},
													"response": [
														{
															"name": "Get alert group",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"logs-alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Successfully got alert groups\",\n  \"data\": {\n    \"name\": \"test alert\",\n    \"interval\": \"5m\",\n    \"rules\": [\n      {\n        \"alert\": \"up test\",\n        \"expr\": \"up == 1\",\n        \"labels\": {\n          \"test\": \"test\"\n        },\n        \"for\": \"30s\",\n        \"annotations\": {\n          \"test\": \"test\"\n        }\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Something went wrong.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"logs-alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"logs-alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														}
													]
												},
												{
													"name": "v1 instances logs-alertgroups update",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"alert\": \"veniam adipisicing Lorem deserunt fugiat\",\n      \"expr\": \"sed id\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    },\n    {\n      \"alert\": \"deserunt in pariatur\",\n      \"expr\": \"aliqua sunt\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    }\n  ],\n  \"interval\": \"60s\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Update logs alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update alert group\n\n***400*** - something went wrong updating the alert group\n\n***403*** - you are not authorized\n\n***404*** - secret not found"
													},
													"response": [
														{
															"name": "Update alert group.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"logs-alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Alert group updated successfully\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong updating the alert group.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"logs-alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"logs-alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Secret not found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"logs-alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
														}
													]
												},
												{
													"name": "v1 instances logs-alertgroups delete",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete logs alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert group\n\n***400*** - something went wrong deleting the alert group\n\n***403*** - you are not authorized\n\n***404*** - secret for config not found"
													},
													"response": [
														{
															"name": "Delete alert group.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"logs-alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Alert group has been deleted successfully\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong deleting the alert group.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"logs-alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not delete alert group config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"logs-alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Secret for config not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups/:groupName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"logs-alertgroups",
																		":groupName"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not delete alert group config\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "v1 instances logs-alertgroups list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"logs-alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get logs alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic token from api user\n    \n\n**Responses**\n\n***200*** - get all alert groups\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - could not read alert group config"
											},
											"response": [
												{
													"name": "Get all alert groups",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got alert groups\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Could not read alert group config.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
												}
											]
										},
										{
											"name": "v1 instances logs-alertgroups create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"dolor nisi tempor\",\n  \"rules\": [\n    {\n      \"alert\": \"magna\",\n      \"expr\": \"reprehenderit culpa qui voluptate\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    },\n    {\n      \"alert\": \"in voluptate nulla\",\n      \"expr\": \"cupidatat proident velit voluptate non\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    }\n  ],\n  \"interval\": \"60s\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"logs-alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Create logs alert group config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert group\n\n***400*** - could not create alert config\n\n***403*** - you are not authorized\n\n***404*** - alert group config not found"
											},
											"response": [
												{
													"name": "Create alert group.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": true,\n  \"message\": \"Group successfully created\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Could not create alert group config",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not create alert group config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Alert group config not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-alertgroups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-alertgroups"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not create alert group config\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "logs-configs",
									"item": [
										{
											"name": "v1 instances logs-configs list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"logs-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get logs configuration for instance.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   oauth token from oath keeper\n    \n\n**Responses**\n\n***200*** - get logs config\n\n***403*** - you do not have permission to perform this action"
											},
											"response": [
												{
													"name": "Get logs config",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got logs config\",\n  \"config\": {\n    \"retention\": \"14d\"\n  }\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										},
										{
											"name": "v1 instances logs-configs update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"retention\": \"amet par\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"logs-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Update logs config.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   oauth token from oauth keeper\n    \n\n**Responses**\n\n***202*** - update logs config\n\n***400*** - no valid json body\n\n***403*** - you do not have permission to perform this action\n\n***500*** - something went wrong"
											},
											"response": [
												{
													"name": "Update logs config",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully updated logs configuration\"\n}"
												},
												{
													"name": "No valid json body",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"No valid json body\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Something went wrong",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/logs-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"logs-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Something went wrong\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "metrics-storage-retentions",
									"item": [
										{
											"name": "v1 instances metrics-storage-retentions list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/metrics-storage-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"metrics-storage-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get bucket retention time for instance.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic + token auth\n*   oauth token\n    \n\n**Responses**\n\n**200** - get bucket retention\n\n***403*** - you do not have permission to perform this action"
											},
											"response": [
												{
													"name": "Get bucket retention",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/metrics-storage-retentions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"metrics-storage-retentions"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got bucket retention\",\n  \"metricsRetentionTimeRaw\": \"14d\",\n  \"metricsRetentionTime5m\": \"0d\",\n  \"metricsRetentionTime1h\": \"0d\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/metrics-storage-retentions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"metrics-storage-retentions"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										},
										{
											"name": "v1 instances metrics-storage-retentions update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"metricsRetentionTimeRaw\": \"est \",\n  \"metricsRetentionTime5m\": \"rep\",\n  \"metricsRetentionTime1h\": \"null\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/metrics-storage-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"metrics-storage-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Update bucket retention time.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic + token auth\n*   oauth token\n    \n\n**Responses**\n\n***202*** - update bucket retention\n\n***400*** - no valid json body\n\n***403*** - you do not have permission to perform this action\n\n***500*** - something went wrong during bucket retention time update process"
											},
											"response": [
												{
													"name": "Update bucket retention",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/metrics-storage-retentions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"metrics-storage-retentions"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully updated bucket retention time\"\n}"
												},
												{
													"name": "No valid json body",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/metrics-storage-retentions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"metrics-storage-retentions"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"No valid json body\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/metrics-storage-retentions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"metrics-storage-retentions"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Something went wrong during bucket retention time update process",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts admin basic + token auth and oauth token.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/metrics-storage-retentions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"metrics-storage-retentions"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Something went wrong during bucket retention time update process\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "scrapeconfigs",
									"item": [
										{
											"name": "{job Name}",
											"item": [
												{
													"name": "v1 instances scrapeconfigs read",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get scrape config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get scrape target\n\n***400*** - something went wrong\n\n***403*** - you are not authorized"
													},
													"response": [
														{
															"name": "Get scrape target",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"scrapeconfigs",
																		":jobName"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "jobName",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Successfully get job\",\n  \"data\": {\n    \"jobName\": \"test\",\n    \"scheme\": \"https\",\n    \"scrapeInterval\": \"5m\",\n    \"scrapeTimeout\": \"1m\",\n    \"staticConfigs\": [\n      {\n        \"targets\": [\n          \"example.com\"\n        ]\n      }\n    ],\n    \"metricsPath\": \"/metrics\"\n  }\n}"
														},
														{
															"name": "Something went wrong.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"scrapeconfigs",
																		":jobName"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "jobName",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not read scrape config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token for instances.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"scrapeconfigs",
																		":jobName"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "jobName",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														}
													]
												},
												{
													"name": "v1 instances scrapeconfigs update",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"scheme\": \"https\",\n  \"scrapeInterval\": \"Excepteu\",\n  \"scrapeTimeout\": \"dolor\",\n  \"staticConfigs\": [\n    {\n      \"targets\": [\n        \"incididunt deserunt\",\n        \"irure e\"\n      ],\n      \"labels\": {}\n    },\n    {\n      \"targets\": [\n        \"proident dolor tempor nostrud exercitation\",\n        \"deserunt eu exercitation ad\"\n      ],\n      \"labels\": {}\n    }\n  ],\n  \"metricsPath\": \"/metrics\",\n  \"basicAuth\": {\n    \"username\": \"in sunt occaecat velit\",\n    \"password\": \"commodo deserunt laboris ut ex\"\n  },\n  \"tlsConfig\": {\n    \"insecureSkipVerify\": false\n  },\n  \"bearerToken\": \"aliquip sint consequat\",\n  \"metricsRelabelConfigs\": [\n    {\n      \"sourceLabels\": [\n        \"Lorem \",\n        \"proident aute commodo sunt nulla\"\n      ],\n      \"separator\": \";\",\n      \"targetLabel\": \"est commodo id ullamco\",\n      \"regex\": \".*\",\n      \"modulus\": 2836163.1350354105,\n      \"replacement\": \"$1\",\n      \"action\": \"replace\"\n    },\n    {\n      \"sourceLabels\": [\n        \"non consectetur in tempor labore\",\n        \"ut\"\n      ],\n      \"separator\": \";\",\n      \"targetLabel\": \"Excepteur fugiat laboris\",\n      \"regex\": \".*\",\n      \"modulus\": -86563377.0359342,\n      \"replacement\": \"$1\",\n      \"action\": \"replace\"\n    }\n  ],\n  \"params\": {},\n  \"honorLabels\": \"false\",\n  \"honorTimeStamps\": \"false\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Update scrape config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update scrape target for prometheus\n\n***400*** - something went wrong updating the job\n\n***403*** - you are not authorized\n\n***404*** - secret for config not found"
													},
													"response": [
														{
															"name": "Update scrape target for prometheus.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"scrapeconfigs",
																		":jobName"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "jobName",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Successfully updated job\",\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong updating the job.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"scrapeconfigs",
																		":jobName"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "jobName",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not update scrape config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token for instances.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"scrapeconfigs",
																		":jobName"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "jobName",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Secret for config not found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"scrapeconfigs",
																		":jobName"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "jobName",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not update scrape config\"\n}"
														}
													]
												},
												{
													"name": "v1 instances scrapeconfigs delete",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete scrape config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - deleted scrape configs\n\n***400*** - something weng wrong deleting the scrape config\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
													},
													"response": [
														{
															"name": "Delete scrape target for prometheus.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"scrapeconfigs",
																		":jobName"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "jobName",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ],\n  \"message\": \"Job has been deleted successfully\"\n}"
														},
														{
															"name": "Something went wrong deleting the job.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"scrapeconfigs",
																		":jobName"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "jobName",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not delete scrape config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token for instances.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"scrapeconfigs",
																		":jobName"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "jobName",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Secret for config not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs/:jobName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"instances",
																		":instanceId",
																		"scrapeconfigs",
																		":jobName"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "jobName",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not delete scrape config\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "v1 instances scrapeconfigs list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get scrape config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get all scrape targets\n\n***400*** - something went wrong\n\n***403*** - you are not authorized"
											},
											"response": [
												{
													"name": "Get all scrape targets",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got scrape config\",\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not read scrape config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token for instances.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										},
										{
											"name": "v1 instances scrapeconfigs create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"jobName\": \"dolor in\",\n  \"scheme\": \"https\",\n  \"scrapeInterval\": \"in eu\",\n  \"scrapeTimeout\": \"occae\",\n  \"staticConfigs\": [\n    {\n      \"targets\": [\n        \"reprehenderit dolor et cillum id\",\n        \"proident mollit deserunt Excepteur\"\n      ],\n      \"labels\": {}\n    },\n    {\n      \"targets\": [\n        \"dolore\",\n        \"proident\"\n      ],\n      \"labels\": {}\n    }\n  ],\n  \"metricsPath\": \"/metrics\",\n  \"sampleLimit\": 5000,\n  \"basicAuth\": {\n    \"username\": \"aliquip tempor sint occaecat voluptate\",\n    \"password\": \"occaecat laboris et\"\n  },\n  \"oauth2\": {\n    \"clientId\": \"enim commodo ad\",\n    \"clientSecret\": \"Duis ut\",\n    \"tokenUrl\": \"dolor Ut ullamco sunt\",\n    \"scopes\": [\n      \"sed cupidatat enim sit\",\n      \"in voluptate ut amet\"\n    ],\n    \"tlsConfig\": {\n      \"insecureSkipVerify\": false\n    }\n  },\n  \"tlsConfig\": {\n    \"insecureSkipVerify\": false\n  },\n  \"bearerToken\": \"ullamco dolor l\",\n  \"metricsRelabelConfigs\": [\n    {\n      \"sourceLabels\": [\n        \"nulla tempor anim cupidatat eu\",\n        \"commodo\"\n      ],\n      \"separator\": \";\",\n      \"targetLabel\": \"fugiat proident qui\",\n      \"regex\": \".*\",\n      \"modulus\": 8629690.928968087,\n      \"replacement\": \"$1\",\n      \"action\": \"replace\"\n    },\n    {\n      \"sourceLabels\": [\n        \"est ullamco incididunt id \",\n        \"ullamco esse in\"\n      ],\n      \"separator\": \";\",\n      \"targetLabel\": \"laborum enim Lorem irure\",\n      \"regex\": \".*\",\n      \"modulus\": -77569253.19607463,\n      \"replacement\": \"$1\",\n      \"action\": \"replace\"\n    }\n  ],\n  \"params\": {},\n  \"honorLabels\": \"false\",\n  \"honorTimeStamps\": \"false\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Create scrape config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create scrape target for prometheus\n\n***400*** - something went wrong creating the job\n\n***403*** - you are not authorized\n\n***404*** - secret for config not found"
											},
											"response": [
												{
													"name": "Create scrape target for prometheus.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Job successfully created\",\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong creating the job.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not create scrape config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token for instances.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Secret for config not found.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not create scrape config\"\n}"
												}
											]
										},
										{
											"name": "v1 instances scrapeconfigs partial update",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"jobName\": \"officia consectetur enim eu\",\n    \"scheme\": \"https\",\n    \"scrapeInterval\": \"exerc\",\n    \"scrapeTimeout\": \"est L\",\n    \"staticConfigs\": [\n      {\n        \"targets\": [\n          \"mollit officia minim\",\n          \"quis sint culpa\"\n        ],\n        \"labels\": {}\n      },\n      {\n        \"targets\": [\n          \"sunt Lorem est id\",\n          \"mollit cillum\"\n        ],\n        \"labels\": {}\n      }\n    ],\n    \"metricsPath\": \"/metrics\",\n    \"sampleLimit\": 5000,\n    \"basicAuth\": {\n      \"username\": \"sunt eiusmod fugiat\",\n      \"password\": \"minim deserunt ullamco\"\n    },\n    \"oauth2\": {\n      \"clientId\": \"est\",\n      \"clientSecret\": \"mollit\",\n      \"tokenUrl\": \"dolore laborum\",\n      \"scopes\": [\n        \"tempor\",\n        \"dolor dolore consequat veniam ullamco\"\n      ],\n      \"tlsConfig\": {\n        \"insecureSkipVerify\": false\n      }\n    },\n    \"tlsConfig\": {\n      \"insecureSkipVerify\": false\n    },\n    \"bearerToken\": \"in est sed nulla\",\n    \"metricsRelabelConfigs\": [\n      {\n        \"sourceLabels\": [\n          \"dolore ut\",\n          \"in officia\"\n        ],\n        \"separator\": \";\",\n        \"targetLabel\": \"commodo exercitation irure\",\n        \"regex\": \".*\",\n        \"modulus\": 42021353.89690152,\n        \"replacement\": \"$1\",\n        \"action\": \"replace\"\n      },\n      {\n        \"sourceLabels\": [\n          \"quis occaecat\",\n          \"laborum enim\"\n        ],\n        \"separator\": \";\",\n        \"targetLabel\": \"sunt Duis cupidatat proident\",\n        \"regex\": \".*\",\n        \"modulus\": 70718297.54152638,\n        \"replacement\": \"$1\",\n        \"action\": \"replace\"\n      }\n    ],\n    \"params\": {},\n    \"honorLabels\": \"false\",\n    \"honorTimeStamps\": \"false\"\n  },\n  {\n    \"jobName\": \"deserunt qui dolore exercitation\",\n    \"scheme\": \"https\",\n    \"scrapeInterval\": \"fugiat\",\n    \"scrapeTimeout\": \"in amet\",\n    \"staticConfigs\": [\n      {\n        \"targets\": [\n          \"non tempor\",\n          \"reprehenderit\"\n        ],\n        \"labels\": {}\n      },\n      {\n        \"targets\": [\n          \"sit sint in aliqua commodo\",\n          \"sunt cillum mollit Excepteur reprehenderit\"\n        ],\n        \"labels\": {}\n      }\n    ],\n    \"metricsPath\": \"/metrics\",\n    \"sampleLimit\": 5000,\n    \"basicAuth\": {\n      \"username\": \"nostrud ea adipisicing Duis laboris\",\n      \"password\": \"commodo elit ea\"\n    },\n    \"oauth2\": {\n      \"clientId\": \"officia et esse\",\n      \"clientSecret\": \"aliquip Excepteur\",\n      \"tokenUrl\": \"Duis nisi labore\",\n      \"scopes\": [\n        \"Duis commodo sed\",\n        \"dolore nostrud Excepteur dolor laborum\"\n      ],\n      \"tlsConfig\": {\n        \"insecureSkipVerify\": false\n      }\n    },\n    \"tlsConfig\": {\n      \"insecureSkipVerify\": false\n    },\n    \"bearerToken\": \"ut dolore fugiat nisi\",\n    \"metricsRelabelConfigs\": [\n      {\n        \"sourceLabels\": [\n          \"esse dolor fugiat proident\",\n          \"ut\"\n        ],\n        \"separator\": \";\",\n        \"targetLabel\": \"Duis anim voluptate cupidatat commodo\",\n        \"regex\": \".*\",\n        \"modulus\": 90398070.99889874,\n        \"replacement\": \"$1\",\n        \"action\": \"replace\"\n      },\n      {\n        \"sourceLabels\": [\n          \"sunt exercitation labore\",\n          \"in\"\n        ],\n        \"separator\": \";\",\n        \"targetLabel\": \"labor\",\n        \"regex\": \".*\",\n        \"modulus\": 45896436.87305945,\n        \"replacement\": \"$1\",\n        \"action\": \"replace\"\n      }\n    ],\n    \"params\": {},\n    \"honorLabels\": \"false\",\n    \"honorTimeStamps\": \"false\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Patch scrape config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create scrape targets for prometheus\n\n***400*** - something went wrong creating the job\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
											},
											"response": [
												{
													"name": "Create scrape targets for prometheus.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Job successfully created\",\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong creating the job.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not create scrape config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token for instances.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Instance not found.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not create scrape config\"\n}"
												}
											]
										},
										{
											"name": "v1 instances scrapeconfigs delete",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs?jobName=ad anim amet in,deserunt incididunt id eiusmod",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"query": [
														{
															"key": "jobName",
															"value": "ad anim amet in,deserunt incididunt id eiusmod",
															"description": "(Required) Name of the jobs that should be deleted"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete scrape configs route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - deleted scrape configs\n\n***400*** - something went wrong deleting the scrape config\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
											},
											"response": [
												{
													"name": "Deleted scrape configs.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs?jobName=minim,et consequat in commodo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"query": [
																{
																	"key": "jobName",
																	"value": "minim,et consequat in commodo"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Scrape configs successfully deleted\",\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong deleting the scrape config.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs?jobName=minim,et consequat in commodo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"query": [
																{
																	"key": "jobName",
																	"value": "minim,et consequat in commodo"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not delete scrape configs\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token for instances.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs?jobName=minim,et consequat in commodo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"query": [
																{
																	"key": "jobName",
																	"value": "minim,et consequat in commodo"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Instance not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/scrapeconfigs?jobName=minim,et consequat in commodo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"scrapeconfigs"
															],
															"query": [
																{
																	"key": "jobName",
																	"value": "minim,et consequat in commodo"
																}
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not delete scrape configs\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "traces-configs",
									"item": [
										{
											"name": "v1 instances traces-configs list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/traces-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"traces-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get traces configuration for instance.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   oauth token from oauth keeper\n    \n\n**Responses**\n\n***200*** - get traces config\n\n***403*** - you do not have permission to perform this action"
											},
											"response": [
												{
													"name": "Get traces config",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/traces-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"traces-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got traces config\",\n  \"config\": {\n    \"retention\": \"14d\"\n  }\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/traces-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"traces-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										},
										{
											"name": "v1 instances traces-configs update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"retention\": \"Ut\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/traces-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"traces-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Update traces config.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   oauth toke from oauth keeper\n    \n\n**Responses**\n\n***202*** - update traces config\n\n***400*** - no valid json body\n\n***403*** - you do not have permission to perform this action\n\n***500*** - something went wrong"
											},
											"response": [
												{
													"name": "Update traces config",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/traces-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"traces-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully updated traces configuration\"\n}"
												},
												{
													"name": "No valid json body",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/traces-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"traces-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"No valid json body\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/traces-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"traces-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Something went wrong",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/instances/:instanceId/traces-configs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"instances",
																":instanceId",
																"traces-configs"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Something went wrong\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "v1 instances read",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get instance information.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get instance data\n\n***403*** - you are not authorized"
									},
									"response": [
										{
											"name": "Get instance data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got services\",\n  \"instance\": {\n    \"instance\": \"123456\",\n    \"cluster\": \"stackit\",\n    \"grafanaUrl\": \"https://ui.stackit.argus.eu01.cloud/instances/123456\",\n    \"dashboardUrl\": \"dashboard.example.com\",\n    \"grafanaPlugins\": [],\n    \"name\": \"test\",\n    \"grafanaAdminPassword\": \"asdf313kles23450des0asdf313kles2\",\n    \"grafanaAdminUser\": \"admin\",\n    \"metricsRetentionTimeRaw\": 14,\n    \"metricsRetentionTime5m\": 0,\n    \"metricsRetentionTime1h\": 0,\n    \"metricsUrl\": \"https://storage.api.stackit.argus.eu01.cloud/instances/123456\",\n    \"grafanaPublicReadAccess\": false,\n    \"targetsUrl\": \"https://metrics.stackit.argus.eu01.cloud/instances/123456\",\n    \"alertingUrl\": \"https://alerting.stackit.argus.eu01.cloud/instances/123456\",\n    \"plan\": {\n      \"planId\": \"7b1fbd9c-9acd-42ce-95d3-0f6822d6cabe\",\n      \"description\": \"Small Plan\",\n      \"name\": \"SmallPlan\",\n      \"bucketSize\": 20,\n      \"grafanaGlobalUsers\": 10,\n      \"grafanaGlobalOrgs\": 2,\n      \"grafanaGlobalDashboards\": 20,\n      \"alertRules\": 1000,\n      \"targetNumber\": 2,\n      \"samplesPerScrape\": 1000,\n      \"grafanaGlobalSessions\": 10,\n      \"amount\": 49,\n      \"alertReceivers\": 10,\n      \"alertMatchers\": 10\n    }\n  }\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								},
								{
									"name": "v1 instances auth list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/instances/:instanceId/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"instances",
												":instanceId",
												"auth"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get authentication.\n\n**Authorization**\n\nAccepts:\n\n*   amin basic\n*   api token\n    \n\n**Responses**\n\n***200*** - is authenticated\n\n***403*** - you are not authorized"
									},
									"response": [
										{
											"name": "Is authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic auth + api token.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"auth"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Authenticated\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic auth + api token.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"auth"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								},
								{
									"name": "v1 instances backup-restores create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-restores/:backupDate?restoreTarget=alertRules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"instances",
												":instanceId",
												"backup-restores",
												":backupDate"
											],
											"query": [
												{
													"key": "restoreTarget",
													"value": "alertRules",
													"description": "(Required) List of restore targets"
												}
											],
											"variable": [
												{
													"key": "backupDate",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Restore backup.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic\n*   token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***200*** - restore backup\n\n***403*** - you do not have permission to perform this action\n\n***404*** - backup not found"
									},
									"response": [
										{
											"name": "Restore backup",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-restores/:backupDate?restoreTarget=alertRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"backup-restores",
														":backupDate"
													],
													"query": [
														{
															"key": "restoreTarget",
															"value": "alertRules"
														}
													],
													"variable": [
														{
															"key": "backupDate",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Restore will be proceeded\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-restores/:backupDate?restoreTarget=alertRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"backup-restores",
														":backupDate"
													],
													"query": [
														{
															"key": "restoreTarget",
															"value": "alertRules"
														}
													],
													"variable": [
														{
															"key": "backupDate",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Backup not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/instances/:instanceId/backup-restores/:backupDate?restoreTarget=alertRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"instances",
														":instanceId",
														"backup-restores",
														":backupDate"
													],
													"query": [
														{
															"key": "restoreTarget",
															"value": "alertRules"
														}
													],
													"variable": [
														{
															"key": "backupDate",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Backup not found\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "v1 instances list",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "search string that should be in service name",
										"key": "search",
										"value": "deserunt"
									},
									{
										"description": "tags to filter services",
										"key": "tags",
										"value": "ad anim amet in,deserunt incididunt id eiusmod"
									},
									{
										"description": "page index when the instance should be paged. It will return 4 instance per page",
										"key": "pageIdx",
										"value": "89499240.82197812"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"instances"
									]
								},
								"description": "Get all instances for a cluster id.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n    \n\n**Responses**\n\n***200*** - you are authorized and get all cluster names\n\n***400*** - the params are not valid\n\n***403*** - you are not authorized\n\n**Parameters**\n\nStartFragment\n\n***search*** - string (*header*): search string that should be in cluster name\n\n***pageIdx*** - number (*header*): page index when the clusters should be paged. it will return 4 cluster per page\n\nEndFragment"
							},
							"response": [
								{
									"name": "You are authorized and get all cluster names",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth",
												"key": "Authorization",
												"value": "deserunt"
											},
											{
												"description": "search string that should be in service name",
												"key": "search",
												"value": "deserunt"
											},
											{
												"description": "tags to filter services",
												"key": "tags",
												"value": "minim,et consequat in commodo"
											},
											{
												"description": "page index when the instance should be paged. It will return 4 instance per page",
												"key": "pageIdx",
												"value": "89499240.82197812"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/instances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"instances"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Successfully got services\",\n  \"services\": [\n    {\n      \"instance\": \"123456\",\n      \"cluster\": \"intern\",\n      \"grafanaUrl\": \"grafana.example.com\",\n      \"dashboardUrl\": \"dashboard.example.com\",\n      \"name\": \"test\"\n    }\n  ]\n}"
								},
								{
									"name": "No valid params",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth",
												"key": "Authorization",
												"value": "deserunt"
											},
											{
												"description": "search string that should be in service name",
												"key": "search",
												"value": "deserunt"
											},
											{
												"description": "tags to filter services",
												"key": "tags",
												"value": "minim,et consequat in commodo"
											},
											{
												"description": "page index when the instance should be paged. It will return 4 instance per page",
												"key": "pageIdx",
												"value": "89499240.82197812"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/instances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"instances"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"No valid params\"\n}"
								},
								{
									"name": "Accepts admin basic + token auth and oauth token.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth",
												"key": "Authorization",
												"value": "deserunt"
											},
											{
												"description": "search string that should be in service name",
												"key": "search",
												"value": "deserunt"
											},
											{
												"description": "tags to filter services",
												"key": "tags",
												"value": "minim,et consequat in commodo"
											},
											{
												"description": "page index when the instance should be paged. It will return 4 instance per page",
												"key": "pageIdx",
												"value": "89499240.82197812"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/instances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"instances"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
								}
							]
						},
						{
							"name": "v1 instances partial update",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/instances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"instances"
									]
								},
								"description": "Update all customer monitoring stacks according to the basic yaml in the api."
							},
							"response": [
								{
									"name": "Update all customer monitoring stacks according to the yaml in the api",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts admin basic + token auth.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/instances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"instances"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Update will be proceeded\"\n}"
								},
								{
									"name": "You do not have permission to perform this action.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts admin basic + token auth.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/instances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"instances"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "osb/clusters/{cluster Id}/instances/{instance Id}",
					"item": [
						{
							"name": "users",
							"item": [
								{
									"name": "{service Binding Id}",
									"item": [
										{
											"name": "v1 osb clusters instances users create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId/users/:serviceBindingId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"osb",
														"clusters",
														":clusterId",
														"instances",
														":instanceId",
														"users",
														":serviceBindingId"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "serviceBindingId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Create an api user for instance and cluster.\n\n**Authorization**\n\nAccepts:\n\n*   admin token auth\n    \n\n**Responses**\n\n***201*** - the api user was successfully created\n\n***400*** - something went wrong creating api user. either id does not exists or user is not provided\n\n***403*** - you are not authorized"
											},
											"response": [
												{
													"name": "The api user was successfully created.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId/users/:serviceBindingId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"osb",
																"clusters",
																":clusterId",
																"instances",
																":instanceId",
																"users",
																":serviceBindingId"
															],
															"variable": [
																{
																	"key": "clusterId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "serviceBindingId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully created api user\",\n  \"username\": \"test\",\n  \"password\": \"1fasAELDB234ddeDAfdasfel787oplpj\",\n  \"apiUrl\": \"https://api.argus.eu01.stackit.cloud\",\n  \"apiUrlSwagger\": \"https://api.argus.eu01.stackit.cloud/swagger\",\n  \"instanceId\": \"69a9219e-6c42-4e12-9262-1c4d073674da\",\n  \"expiresAt\": \"2021-06-21T08:44:30.632147\"\n}"
												},
												{
													"name": "Something went wrong creating api user. Either it does not exists or user is not provided.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId/users/:serviceBindingId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"osb",
																"clusters",
																":clusterId",
																"instances",
																":instanceId",
																"users",
																":serviceBindingId"
															],
															"variable": [
																{
																	"key": "clusterId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "serviceBindingId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Instance does not exist\"\n}"
												},
												{
													"name": "You are not authorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId/users/:serviceBindingId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"osb",
																"clusters",
																":clusterId",
																"instances",
																":instanceId",
																"users",
																":serviceBindingId"
															],
															"variable": [
																{
																	"key": "clusterId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "serviceBindingId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										},
										{
											"name": "v1 osb clusters instances users delete",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId/users/:serviceBindingId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"osb",
														"clusters",
														":clusterId",
														"instances",
														":instanceId",
														"users",
														":serviceBindingId"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "serviceBindingId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete a api user for instance and cluster.\n\n**Authorization**\n\nAccepts:\n\n*   api key\n*   basic auth + token\n    \n\n**Responses**\n\n***200*** - the api user was successfully deleted\n\n***400*** - something went wrong deleting api user. either it does not exists or user is not provided\n\n***403*** - you are not authorized"
											},
											"response": [
												{
													"name": "The api user was successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId/users/:serviceBindingId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"osb",
																"clusters",
																":clusterId",
																"instances",
																":instanceId",
																"users",
																":serviceBindingId"
															],
															"variable": [
																{
																	"key": "clusterId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "serviceBindingId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully deleted api user\"\n}"
												},
												{
													"name": "Something went wrong deleting api user. Either it does not exists or user is not provided.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId/users/:serviceBindingId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"osb",
																"clusters",
																":clusterId",
																"instances",
																":instanceId",
																"users",
																":serviceBindingId"
															],
															"variable": [
																{
																	"key": "clusterId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "serviceBindingId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Can't unbind the user since it does not exists\"\n}"
												},
												{
													"name": "You are not authorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId/users/:serviceBindingId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"osb",
																"clusters",
																":clusterId",
																"instances",
																":instanceId",
																"users",
																":serviceBindingId"
															],
															"variable": [
																{
																	"key": "clusterId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "serviceBindingId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "v1 osb clusters instances users list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"osb",
												"clusters",
												":clusterId",
												"instances",
												":instanceId",
												"users"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get all api users.\n\n**Responses**\n\n***200*** - successfully got api user\n\n***403*** - you are not authorized"
									},
									"response": [
										{
											"name": "Successfully got api user.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"osb",
														"clusters",
														":clusterId",
														"instances",
														":instanceId",
														"users"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully created api user\",\n  \"apiUsers\": [\n    \"test_test_12345678\"\n  ]\n}"
										},
										{
											"name": "You are not authorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"osb",
														"clusters",
														":clusterId",
														"instances",
														":instanceId",
														"users"
													],
													"variable": [
														{
															"key": "clusterId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "v1 osb clusters instances create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"osb",
										"clusters",
										":clusterId",
										"instances",
										":instanceId"
									],
									"variable": [
										{
											"key": "clusterId",
											"value": "deserunt",
											"description": "(Required) "
										},
										{
											"key": "instanceId",
											"value": "deserunt",
											"description": "(Required) "
										}
									]
								},
								"description": "Create monitoring stack.\n\n**Authorization**\n\nAccepts:\n\n*   api key\n*   admin auth + token\n    \n\n**Responses**\n\n***201*** - the monitoring stack was successfully created\n\n***403*** - you are not authorized\n\n***500*** - something went wrong creating the monitoring stack"
							},
							"response": [
								{
									"name": "The monitoring stack was successfully created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"osb",
												"clusters",
												":clusterId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Successfully created monitoring stack\",\n  \"dashboardUrl\": \"https://example-dashboard.com\"\n}"
								},
								{
									"name": "You are not authorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"osb",
												"clusters",
												":clusterId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
								},
								{
									"name": "Something went wrong creating the monitoring stack.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"osb",
												"clusters",
												":clusterId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Something went wrong creating the monitoring stack\"\n}"
								}
							]
						},
						{
							"name": "v1 osb clusters instances update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"osb",
										"clusters",
										":clusterId",
										"instances",
										":instanceId"
									],
									"variable": [
										{
											"key": "clusterId",
											"value": "deserunt",
											"description": "(Required) "
										},
										{
											"key": "instanceId",
											"value": "deserunt",
											"description": "(Required) "
										}
									]
								},
								"description": "Update route.\n\n**Authorization**\n\nAccepts:\n\n*   **api key**\n*   admin basic auth + token\n    \n\n**Responses**\n\n***202*** - the monitoring stack was successfully updated\n\n***403*** - you are not authorized\n\n***500*** - something went wrong creating the monitoring stack"
							},
							"response": [
								{
									"name": "The monitoring stack was successfully updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"osb",
												"clusters",
												":clusterId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Successfully updated monitoring stack\",\n  \"dashboardUrl\": \"https://example-dashboard.com\"\n}"
								},
								{
									"name": "You are not authorized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"osb",
												"clusters",
												":clusterId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
								},
								{
									"name": "Something went wrong creating the monitoring stack.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"osb",
												"clusters",
												":clusterId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Something went wrong creating the monitoring stack\"\n}"
								}
							]
						},
						{
							"name": "v1 osb clusters instances delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"osb",
										"clusters",
										":clusterId",
										"instances",
										":instanceId"
									],
									"variable": [
										{
											"key": "clusterId",
											"value": "deserunt",
											"description": "(Required) "
										},
										{
											"key": "instanceId",
											"value": "deserunt",
											"description": "(Required) "
										}
									]
								},
								"description": "Delete a monitoring stack.\n\n**Authorization**\n\nAccepts:\n\n*   api key\n*   admin basic auth + token\n    \n\n**Responses**\n\n***200*** - the monitoring stack was successfully deleted\n\n***400*** - the instance does not exits\n\n***403*** - you are not authorized\n\n***500*** - something went wrong deleting the monitoring stack"
							},
							"response": [
								{
									"name": "The monitoring stack was successfully deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"osb",
												"clusters",
												":clusterId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Successfully deleted monitoring stack\"\n}"
								},
								{
									"name": "Instance does not exists.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"osb",
												"clusters",
												":clusterId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Instance does not exist\"\n}"
								},
								{
									"name": "You are not authorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"osb",
												"clusters",
												":clusterId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
								},
								{
									"name": "Something went wrong deleting the monitoring stack.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts Api-Key and admin basic auth + token as authorization.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/osb/clusters/:clusterId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"osb",
												"clusters",
												":clusterId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "clusterId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Something went wrong deleting the monitoring stack\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "projects/{project Id}/instances/{instance Id}",
					"item": [
						{
							"name": "alertconfigs",
							"item": [
								{
									"name": "receivers",
									"item": [
										{
											"name": "{receiver}",
											"item": [
												{
													"name": "v1 projects instances alertconfigs receivers read",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers",
																":receiver"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "receiver",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get alert receiver config for single alert receiver.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert config receiver\n\n***403*** - you are not authorized\n\n***404*** - alert config not found"
													},
													"response": [
														{
															"name": "Get alert config receiver",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"name\": \"team-X-mails\",\n    \"emailConfigs\": [\n      {\n        \"to\": \"team-X+alerts@example.org\"\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Alert config receiver not found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Alert config receiver not found\"\n}"
														}
													]
												},
												{
													"name": "v1 projects instances alertconfigs receivers update",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"occaecat\",\n  \"emailConfigs\": [\n    {\n      \"to\": \"est incididunt\",\n      \"from\": \"Excepteur anim deserunt do id\",\n      \"smarthost\": \"Lorem dolore in cillum Duis\",\n      \"authUsername\": \"enim\",\n      \"authPassword\": \"in sed\",\n      \"authIdentity\": \"sit dolor\"\n    },\n    {\n      \"to\": \"reprehenderit irure\",\n      \"from\": \"in Lorem anim\",\n      \"smarthost\": \"Lorem dolor voluptate irure eiusmod\",\n      \"authUsername\": \"eiusmod occaecat irure ex\",\n      \"authPassword\": \"culpa laborum ut id\",\n      \"authIdentity\": \"do aliqua ipsum in ut\"\n    }\n  ],\n  \"opsgenieConfigs\": [\n    {\n      \"apiKey\": \"minim officia Lorem\",\n      \"apiUrl\": \"in minim dolore Excepteur\",\n      \"tags\": \"et laboris occaecat\"\n    },\n    {\n      \"apiKey\": \"ex\",\n      \"apiUrl\": \"officia in sunt\",\n      \"tags\": \"proident\"\n    }\n  ],\n  \"webHookConfigs\": [\n    {\n      \"url\": \"ipsum sint\",\n      \"msTeams\": false\n    },\n    {\n      \"url\": \"officia ea in amet aliqua\",\n      \"msTeams\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers",
																":receiver"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "receiver",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Update alert receiver config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update alert config receiver\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert config not found"
													},
													"response": [
														{
															"name": "Update alert config receiver.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Success\",\n  \"data\": [\n    {\n      \"name\": \"team-X-mails\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+papers@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-Y-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-Y+paper@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-pager\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts-critical@example.org\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"12345678\",\n          \"apiUrl\": \"https://example.opsgenie.org\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Something went wrong\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Alert config not found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Instance not found\"\n}"
														}
													]
												},
												{
													"name": "v1 projects instances alertconfigs receivers delete",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers",
																":receiver"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "receiver",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete alert receiver.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert config receiver\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
													},
													"response": [
														{
															"name": "Delete alert config receiver.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Success\",\n  \"data\": [\n    {\n      \"name\": \"team-X-mails\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+papers@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-Y-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-Y+paper@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-pager\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts-critical@example.org\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"12345678\",\n          \"apiUrl\": \"https://example.opsgenie.org\"\n        }\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Something went wrong\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Instance not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"receivers",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Instance not found\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "v1 projects instances alertconfigs receivers list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs",
														"receivers"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get alert receiver config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert config receivers\n\n***400*** - something went wrong getting alert config receivers\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
											},
											"response": [
												{
													"name": "Get alert config receivers",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Success\",\n  \"data\": [\n    {\n      \"name\": \"team-X-mails\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+papers@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-Y-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-Y+paper@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-pager\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts-critical@example.org\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"12345678\",\n          \"apiUrl\": \"https://example.opsgenie.org\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong getting alert config receivers.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not get alert config receiver\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Instance not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Instance not found\"\n}"
												}
											]
										},
										{
											"name": "v1 projects instances alertconfigs receivers create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"occaecat\",\n  \"emailConfigs\": [\n    {\n      \"to\": \"est incididunt\",\n      \"from\": \"Excepteur anim deserunt do id\",\n      \"smarthost\": \"Lorem dolore in cillum Duis\",\n      \"authUsername\": \"enim\",\n      \"authPassword\": \"in sed\",\n      \"authIdentity\": \"sit dolor\"\n    },\n    {\n      \"to\": \"reprehenderit irure\",\n      \"from\": \"in Lorem anim\",\n      \"smarthost\": \"Lorem dolor voluptate irure eiusmod\",\n      \"authUsername\": \"eiusmod occaecat irure ex\",\n      \"authPassword\": \"culpa laborum ut id\",\n      \"authIdentity\": \"do aliqua ipsum in ut\"\n    }\n  ],\n  \"opsgenieConfigs\": [\n    {\n      \"apiKey\": \"minim officia Lorem\",\n      \"apiUrl\": \"in minim dolore Excepteur\",\n      \"tags\": \"et laboris occaecat\"\n    },\n    {\n      \"apiKey\": \"ex\",\n      \"apiUrl\": \"officia in sunt\",\n      \"tags\": \"proident\"\n    }\n  ],\n  \"webHookConfigs\": [\n    {\n      \"url\": \"ipsum sint\",\n      \"msTeams\": false\n    },\n    {\n      \"url\": \"officia ea in amet aliqua\",\n      \"msTeams\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs",
														"receivers"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Create alert receiver.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert config receiver\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
											},
											"response": [
												{
													"name": "Create alert config receiver.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Success\",\n  \"data\": [\n    {\n      \"name\": \"team-X-mails\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+papers@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-Y-paper\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-Y+paper@example.org\"\n        }\n      ]\n    },\n    {\n      \"name\": \"team-X-pager\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"team-X+alerts-critical@example.org\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"12345678\",\n          \"apiUrl\": \"https://example.opsgenie.org\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Something went wrong\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Instance not found.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/receivers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"receivers"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Instance not found\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "routes",
									"item": [
										{
											"name": "{receiver}",
											"item": [
												{
													"name": "v1 projects instances alertconfigs routes read",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes",
																":receiver"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "receiver",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get alert route config for single route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert config route\n\n***400*** - something went wrong getting alert config route\n\n***403*** - you are not authorized\n\n***404*** - instance not foundc"
													},
													"response": [
														{
															"name": "Get alert config route",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"groupBy\": [\n      \"alertname\",\n      \"cluster\",\n      \"service\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"3h\",\n    \"receiver\": \"team-X-mails\",\n    \"routes\": [\n      {\n        \"matchRe\": {\n          \"service\": \"^(foo1|foo2|baz)$\"\n        },\n        \"receiver\": \"team-X-paper\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-X-paper\",\n            \"routes\": [\n              {\n                \"match\": {\n                  \"severity\": \"warning\"\n                },\n                \"receiver\": \"team-X-paper\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"match\": {\n          \"service\": \"files\"\n        },\n        \"receiver\": \"team-X-pager\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-Y-paper\"\n          }\n        ]\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Something went wrong getting alert config route.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not get alert config receiver\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Instance not found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Instance not found\"\n}"
														}
													]
												},
												{
													"name": "v1 projects instances alertconfigs routes update",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"receiver\": \"enim nisi\",\n  \"groupBy\": [\n    \"aliquip pa\",\n    \"pariatur Lorem laboris ut\"\n  ],\n  \"groupWait\": \"30s\",\n  \"groupInterval\": \"5m\",\n  \"repeatInterval\": \"4h\",\n  \"match\": {},\n  \"matchRe\": {},\n  \"routes\": [\n    {\n      \"receiver\": \"Excepteur in adipisicing Ut\",\n      \"groupBy\": [\n        \"consectetur qui\",\n        \"cupidatat eiusmod consequat velit\"\n      ],\n      \"groupWait\": \"d\",\n      \"groupInterval\": \"culpa\",\n      \"repeatInterval\": \"anim d\",\n      \"match\": {},\n      \"matchRe\": {}\n    },\n    {\n      \"receiver\": \"ipsum consectetur nostrud\",\n      \"groupBy\": [\n        \"laboris non in\",\n        \"sunt adipisicing incididunt\"\n      ],\n      \"groupWait\": \"ame\",\n      \"groupInterval\": \"ulla\",\n      \"repeatInterval\": \"officia\",\n      \"match\": {},\n      \"matchRe\": {}\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes",
																":receiver"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "receiver",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Update alert route of routes in route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update alert config route\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert config not found"
													},
													"response": [
														{
															"name": "Update alert config route.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"groupBy\": [\n      \"alertname\",\n      \"cluster\",\n      \"service\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"3h\",\n    \"receiver\": \"team-X-mails\",\n    \"routes\": [\n      {\n        \"matchRe\": {\n          \"service\": \"^(foo1|foo2|baz)$\"\n        },\n        \"receiver\": \"team-X-paper\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-X-paper\",\n            \"routes\": [\n              {\n                \"match\": {\n                  \"severity\": \"warning\"\n                },\n                \"receiver\": \"team-X-paper\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"match\": {\n          \"service\": \"files\"\n        },\n        \"receiver\": \"team-X-pager\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-Y-paper\"\n          }\n        ]\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Something went wrong.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Something went wrong\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Alert config not found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Instance not found\"\n}"
														}
													]
												},
												{
													"name": "v1 projects instances alertconfigs routes delete",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes",
																":receiver"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "receiver",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete alert route in routes of route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert config route\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
													},
													"response": [
														{
															"name": "Delete alert config route.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"groupBy\": [\n      \"alertname\",\n      \"cluster\",\n      \"service\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"3h\",\n    \"receiver\": \"team-X-mails\",\n    \"routes\": [\n      {\n        \"matchRe\": {\n          \"service\": \"^(foo1|foo2|baz)$\"\n        },\n        \"receiver\": \"team-X-paper\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-X-paper\",\n            \"routes\": [\n              {\n                \"match\": {\n                  \"severity\": \"warning\"\n                },\n                \"receiver\": \"team-X-paper\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"match\": {\n          \"service\": \"files\"\n        },\n        \"receiver\": \"team-X-pager\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-Y-paper\"\n          }\n        ]\n      }\n    ]\n  }\n}"
														},
														{
															"name": "Something went wrong.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Something went wrong\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Instance not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes/:receiver",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertconfigs",
																		"routes",
																		":receiver"
																	],
																	"variable": [
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "receiver",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Instance not found\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "v1 projects instances alertconfigs routes list",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs",
														"routes"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get alert route config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert config route\n\n***400*** - something went wrong getting alert config route\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
											},
											"response": [
												{
													"name": "Get alert config route",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"groupBy\": [\n      \"alertname\",\n      \"cluster\",\n      \"service\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"3h\",\n    \"receiver\": \"team-X-mails\",\n    \"routes\": [\n      {\n        \"matchRe\": {\n          \"service\": \"^(foo1|foo2|baz)$\"\n        },\n        \"receiver\": \"team-X-paper\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-X-paper\",\n            \"routes\": [\n              {\n                \"match\": {\n                  \"severity\": \"warning\"\n                },\n                \"receiver\": \"team-X-paper\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"match\": {\n          \"service\": \"files\"\n        },\n        \"receiver\": \"team-X-pager\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-Y-paper\"\n          }\n        ]\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Something went wrong getting alert config route.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not get alert config receiver\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Instance not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Instance not found\"\n}"
												}
											]
										},
										{
											"name": "v1 projects instances alertconfigs routes create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"receiver\": \"enim nisi\",\n  \"groupBy\": [\n    \"aliquip pa\",\n    \"pariatur Lorem laboris ut\"\n  ],\n  \"groupWait\": \"30s\",\n  \"groupInterval\": \"5m\",\n  \"repeatInterval\": \"4h\",\n  \"match\": {},\n  \"matchRe\": {},\n  \"routes\": [\n    {\n      \"receiver\": \"Excepteur in adipisicing Ut\",\n      \"groupBy\": [\n        \"consectetur qui\",\n        \"cupidatat eiusmod consequat velit\"\n      ],\n      \"groupWait\": \"d\",\n      \"groupInterval\": \"culpa\",\n      \"repeatInterval\": \"anim d\",\n      \"match\": {},\n      \"matchRe\": {}\n    },\n    {\n      \"receiver\": \"ipsum consectetur nostrud\",\n      \"groupBy\": [\n        \"laboris non in\",\n        \"sunt adipisicing incididunt\"\n      ],\n      \"groupWait\": \"ame\",\n      \"groupInterval\": \"ulla\",\n      \"repeatInterval\": \"officia\",\n      \"match\": {},\n      \"matchRe\": {}\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs",
														"routes"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Create alert route in routes of route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert config route\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
											},
											"response": [
												{
													"name": "Create alert config route.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"groupBy\": [\n      \"alertname\",\n      \"cluster\",\n      \"service\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"3h\",\n    \"receiver\": \"team-X-mails\",\n    \"routes\": [\n      {\n        \"matchRe\": {\n          \"service\": \"^(foo1|foo2|baz)$\"\n        },\n        \"receiver\": \"team-X-paper\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-X-paper\",\n            \"routes\": [\n              {\n                \"match\": {\n                  \"severity\": \"warning\"\n                },\n                \"receiver\": \"team-X-paper\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"match\": {\n          \"service\": \"files\"\n        },\n        \"receiver\": \"team-X-pager\",\n        \"routes\": [\n          {\n            \"match\": {\n              \"severity\": \"critical\"\n            },\n            \"receiver\": \"team-Y-paper\"\n          }\n        ]\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Something went wrong\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Instance not found.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs/routes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertconfigs",
																"routes"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Instance not found\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "v1 projects instances alertconfigs list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"alertconfigs"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get alert rule config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert group\n\n***400*** - something went wrong updating the alert config\n\n***403*** - you are not authorized\n\n***404*** - alert config not found"
									},
									"response": [
										{
											"name": "Get alert group",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"global\": {\n      \"smtpSmarthost\": \"localhost:25\",\n      \"smtpFrom\": \"alertmanager@example.org\",\n      \"smtpAuthUsername\": \"alertmanager\",\n      \"smtpAuthPassword\": \"password\"\n    },\n    \"route\": {\n      \"groupBy\": [\n        \"alertname\",\n        \"cluster\",\n        \"service\"\n      ],\n      \"groupWait\": \"30s\",\n      \"groupInterval\": \"5m\",\n      \"repeatInterval\": \"3h\",\n      \"receiver\": \"team-X-mails\",\n      \"routes\": [\n        {\n          \"matchRe\": {\n            \"service\": \"^(foo1|foo2|baz)$\"\n          },\n          \"receiver\": \"team-X-paper\",\n          \"routes\": [\n            {\n              \"match\": {\n                \"severity\": \"critical\"\n              },\n              \"receiver\": \"team-X-paper\",\n              \"routes\": [\n                {\n                  \"match\": {\n                    \"severity\": \"warning\"\n                  },\n                  \"receiver\": \"team-X-paper\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"match\": {\n            \"service\": \"files\"\n          },\n          \"receiver\": \"team-X-pager\",\n          \"routes\": [\n            {\n              \"match\": {\n                \"severity\": \"critical\"\n              },\n              \"receiver\": \"team-Y-paper\"\n            }\n          ]\n        }\n      ]\n    },\n    \"inhibitRules\": [\n      {\n        \"sourceMatch\": {\n          \"severity\": \"criticals\"\n        },\n        \"targetMatch\": {\n          \"severity\": \"warning\"\n        },\n        \"equal\": [\n          \"alertname\",\n          \"cluster\",\n          \"service\"\n        ]\n      }\n    ],\n    \"receivers\": [\n      {\n        \"name\": \"team-X-mails\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+alerts@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-X-paper\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+papers@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-Y-paper\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-Y+paper@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-X-pager\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+alerts-critical@example.org\"\n          }\n        ],\n        \"opsgenieConfigs\": [\n          {\n            \"apiKey\": \"12345678\",\n            \"apiUrl\": \"https://example.opsgenie.org\"\n          }\n        ]\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Something went wrong updating the alert config.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not update alert config\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Alert config not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances alertconfigs update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"route\": {\n    \"receiver\": \"id consectetur esse\",\n    \"groupBy\": [\n      \"quis do nostrud nisi\",\n      \"minim Ut\"\n    ],\n    \"groupWait\": \"30s\",\n    \"groupInterval\": \"5m\",\n    \"repeatInterval\": \"4h\",\n    \"match\": {},\n    \"matchRe\": {},\n    \"routes\": [\n      {\n        \"receiver\": \"in eu dolore quis\",\n        \"groupBy\": [\n          \"labore ut\",\n          \"proident in\"\n        ],\n        \"groupWait\": \"in d\",\n        \"groupInterval\": \"qui nul\",\n        \"repeatInterval\": \"ulla\",\n        \"match\": {},\n        \"matchRe\": {}\n      },\n      {\n        \"receiver\": \"veniam Ut\",\n        \"groupBy\": [\n          \"nisi\",\n          \"Ut occaecat dolor\"\n        ],\n        \"groupWait\": \"co\",\n        \"groupInterval\": \"fugiat \",\n        \"repeatInterval\": \"enim \",\n        \"match\": {},\n        \"matchRe\": {}\n      }\n    ]\n  },\n  \"receivers\": [\n    {\n      \"name\": \"tempor consequat amet voluptate\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"aliquip sunt tempor mollit\",\n          \"from\": \"sit culpa\",\n          \"smarthost\": \"cillum nostrud exercitation\",\n          \"authUsername\": \"et laboris dolore aute\",\n          \"authPassword\": \"non sed\",\n          \"authIdentity\": \"do pariatur ut dolor\"\n        },\n        {\n          \"to\": \"nulla enim\",\n          \"from\": \"adipisicing laborum mollit qui\",\n          \"smarthost\": \"amet consectetur\",\n          \"authUsername\": \"adipisicing dolor\",\n          \"authPassword\": \"commodo ullamco\",\n          \"authIdentity\": \"quis cupidatat\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"amet tempor exercitation nisi\",\n          \"apiUrl\": \"irure tempor anim adipisicing officia\",\n          \"tags\": \"laborum sint nisi officia\"\n        },\n        {\n          \"apiKey\": \"voluptate quis dolore\",\n          \"apiUrl\": \"quis veniam ea deserunt\",\n          \"tags\": \"nisi sunt anim nostrud\"\n        }\n      ],\n      \"webHookConfigs\": [\n        {\n          \"url\": \"ad pariatur aliqua ut ullamco\",\n          \"msTeams\": false\n        },\n        {\n          \"url\": \"velit enim id magna\",\n          \"msTeams\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"cillum dolore minim nisi\",\n      \"emailConfigs\": [\n        {\n          \"to\": \"labore consectetur magna qui ut\",\n          \"from\": \"dolor Excepteur ad\",\n          \"smarthost\": \"velit\",\n          \"authUsername\": \"sit Lorem fugiat consequat\",\n          \"authPassword\": \"nulla irure in\",\n          \"authIdentity\": \"in Duis commodo\"\n        },\n        {\n          \"to\": \"anim\",\n          \"from\": \"esse non magna ex\",\n          \"smarthost\": \"ea sit Excepteur consectetur ullamco\",\n          \"authUsername\": \"do adipisicing nostrud\",\n          \"authPassword\": \"occaecat labore\",\n          \"authIdentity\": \"ipsum in\"\n        }\n      ],\n      \"opsgenieConfigs\": [\n        {\n          \"apiKey\": \"cupidatat dolor consequat dolore\",\n          \"apiUrl\": \"reprehenderit qui\",\n          \"tags\": \"laboris in id elit ad\"\n        },\n        {\n          \"apiKey\": \"mollit aute\",\n          \"apiUrl\": \"deserunt enim laboris cillum culpa\",\n          \"tags\": \"velit Ut et\"\n        }\n      ],\n      \"webHookConfigs\": [\n        {\n          \"url\": \"in in\",\n          \"msTeams\": false\n        },\n        {\n          \"url\": \"in cupidatat\",\n          \"msTeams\": false\n        }\n      ]\n    }\n  ],\n  \"global\": {\n    \"resolveTimeout\": \"5m\",\n    \"smtpFrom\": \"in\",\n    \"smtpSmarthost\": \"fugiat veniam eu id esse\",\n    \"smtpAuthUsername\": \"in labore dolore ut laboris\",\n    \"smtpAuthPassword\": \"ut aute Duis elit\",\n    \"smtpAuthIdentity\": \"in adipisicing tempor\",\n    \"opsgenieApiKey\": \"incididunt consequat in\",\n    \"opsgenieApiUrl\": \"pariatur ad\"\n  },\n  \"inhibitRules\": {\n    \"sourceMatch\": {},\n    \"sourceMatchRe\": {},\n    \"targetMatch\": {},\n    \"targetMatchRe\": {},\n    \"equal\": [\n      \"proident sint esse qui amet\",\n      \"in Excepteur\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"alertconfigs"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Update alert config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic token from api user\n    \n\n**Responses**\n\n***202*** - update alert group\n\n***400*** - something went wrong updating the alert group\n\n***403*** - you are not authorized\n\n***404*** - alert config not found"
									},
									"response": [
										{
											"name": "Update alert group.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Success\",\n  \"data\": {\n    \"global\": {\n      \"smtpSmarthost\": \"localhost:25\",\n      \"smtpFrom\": \"alertmanager@example.org\",\n      \"smtpAuthUsername\": \"alertmanager\",\n      \"smtpAuthPassword\": \"password\"\n    },\n    \"route\": {\n      \"groupBy\": [\n        \"alertname\",\n        \"cluster\",\n        \"service\"\n      ],\n      \"groupWait\": \"30s\",\n      \"groupInterval\": \"5m\",\n      \"repeatInterval\": \"3h\",\n      \"receiver\": \"team-X-mails\",\n      \"routes\": [\n        {\n          \"matchRe\": {\n            \"service\": \"^(foo1|foo2|baz)$\"\n          },\n          \"receiver\": \"team-X-paper\",\n          \"routes\": [\n            {\n              \"match\": {\n                \"severity\": \"critical\"\n              },\n              \"receiver\": \"team-X-paper\",\n              \"routes\": [\n                {\n                  \"match\": {\n                    \"severity\": \"warning\"\n                  },\n                  \"receiver\": \"team-X-paper\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"match\": {\n            \"service\": \"files\"\n          },\n          \"receiver\": \"team-X-pager\",\n          \"routes\": [\n            {\n              \"match\": {\n                \"severity\": \"critical\"\n              },\n              \"receiver\": \"team-Y-paper\"\n            }\n          ]\n        }\n      ]\n    },\n    \"inhibitRules\": [\n      {\n        \"sourceMatch\": {\n          \"severity\": \"criticals\"\n        },\n        \"targetMatch\": {\n          \"severity\": \"warning\"\n        },\n        \"equal\": [\n          \"alertname\",\n          \"cluster\",\n          \"service\"\n        ]\n      }\n    ],\n    \"receivers\": [\n      {\n        \"name\": \"team-X-mails\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+alerts@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-X-paper\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+papers@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-Y-paper\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-Y+paper@example.org\"\n          }\n        ]\n      },\n      {\n        \"name\": \"team-X-pager\",\n        \"emailConfigs\": [\n          {\n            \"to\": \"team-X+alerts-critical@example.org\"\n          }\n        ],\n        \"opsgenieConfigs\": [\n          {\n            \"apiKey\": \"12345678\",\n            \"apiUrl\": \"https://example.opsgenie.org\"\n          }\n        ]\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Something went wrong updating the alert config.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not update alert config\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Alert config not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "alertgroups",
							"item": [
								{
									"name": "{group Name}",
									"item": [
										{
											"name": "alertrules",
											"item": [
												{
													"name": "{alert Name}",
													"item": [
														{
															"name": "v1 projects instances alertgroups alertrules read",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules",
																		":alertName"
																	],
																	"variable": [
																		{
																			"key": "alertName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Get alert rule config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert rules\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rule not found"
															},
															"response": [
																{
																	"name": "Get alert rules",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Successfully got alert rules\",\n  \"data\": {\n    \"alert\": \"up test\",\n    \"expr\": \"up == 1\",\n    \"labels\": {\n      \"test\": \"test\"\n    },\n    \"for\": \"30s\",\n    \"annotations\": {\n      \"test\": \"test\"\n    }\n  }\n}"
																},
																{
																	"name": "Something went wrong.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert rule not found.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not read alert rule config\"\n}"
																}
															]
														},
														{
															"name": "v1 projects instances alertgroups alertrules update",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"expr\": \"sed et laboris\",\n  \"for\": \"0s\",\n  \"labels\": {},\n  \"annotations\": {}\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules",
																		":alertName"
																	],
																	"variable": [
																		{
																			"key": "alertName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Update alert rule config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update alert rules\n\n***400*** - something went wrong updating the alert rule\n\n***403*** - you are not authorized\n\n***404*** - alert rule not found"
															},
															"response": [
																{
																	"name": "Update alert rules.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Alert rule updated successfully\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong updating the alert rule.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not update alert rule config\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert rule not found.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not update alert rule config\"\n}"
																}
															]
														},
														{
															"name": "v1 projects instances alertgroups alertrules delete",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules",
																		":alertName"
																	],
																	"variable": [
																		{
																			"key": "alertName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Delete alert rule config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basi auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert rules\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
															},
															"response": [
																{
																	"name": "Delete alert rule.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Alert rules successfully deleted\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong deleting the alert rule.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not delete alert rule config\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert rule not found.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules/:alertName",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"alertrules",
																				":alertName"
																			],
																			"variable": [
																				{
																					"key": "alertName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not delete alert rule config\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "v1 projects instances alertgroups alertrules list",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName",
																"alertrules"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get alert rule config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic token from api user\n    \n\n**Responses**\n\n***200*** - get all alert rules\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
													},
													"response": [
														{
															"name": "Get all alert rules",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Successfully got alert rules\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not read alert rule config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Alert rules not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not read alert rule config\"\n}"
														}
													]
												},
												{
													"name": "v1 projects instances alertgroups alertrules create",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alert\": \"Ut velit\",\n  \"expr\": \"tempor\",\n  \"for\": \"0s\",\n  \"labels\": {},\n  \"annotations\": {}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName",
																"alertrules"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Create alert rule config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basi auth from api user\n    \n\n**Responses**\n\n***202*** - create alert rule\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
													},
													"response": [
														{
															"name": "Create alert rule.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Rule successfully created\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not create alert rule config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Alert rules not found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not create alert group config\"\n}"
														}
													]
												},
												{
													"name": "v1 projects instances alertgroups alertrules partial update",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"alert\": \"labore reprehenderit adipisicing\",\n    \"expr\": \"ut Duis enim\",\n    \"for\": \"0s\",\n    \"labels\": {},\n    \"annotations\": {}\n  },\n  {\n    \"alert\": \"laboris ea Duis\",\n    \"expr\": \"ullamco\",\n    \"for\": \"0s\",\n    \"labels\": {},\n    \"annotations\": {}\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName",
																"alertrules"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Patch alert rules.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert rules\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
													},
													"response": [
														{
															"name": "Create alert rules.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Rules successfully created\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not create alert rule config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Alert rules not found",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Alert group not found\"\n}"
														}
													]
												},
												{
													"name": "v1 projects instances alertgroups alertrules delete",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules?alertName=ad anim amet in,deserunt incididunt id eiusmod",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName",
																"alertrules"
															],
															"query": [
																{
																	"key": "alertName",
																	"value": "ad anim amet in,deserunt incididunt id eiusmod",
																	"description": "(Required) Name of the alert rules that should be deleted"
																}
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete alert rules.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert rules\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
													},
													"response": [
														{
															"name": "Delete alert rules.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules?alertName=minim,et consequat in commodo",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"query": [
																		{
																			"key": "alertName",
																			"value": "minim,et consequat in commodo"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Rules successfully deleted\",\n  \"data\": [\n    {\n      \"alert\": \"up test\",\n      \"expr\": \"up == 1\",\n      \"labels\": {\n        \"test\": \"test\"\n      },\n      \"for\": \"30s\",\n      \"annotations\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules?alertName=minim,et consequat in commodo",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"query": [
																		{
																			"key": "alertName",
																			"value": "minim,et consequat in commodo"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not delete alert rule config\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules?alertName=minim,et consequat in commodo",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"query": [
																		{
																			"key": "alertName",
																			"value": "minim,et consequat in commodo"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Alert rules not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/alertrules?alertName=minim,et consequat in commodo",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"alertrules"
																	],
																	"query": [
																		{
																			"key": "alertName",
																			"value": "minim,et consequat in commodo"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Alert group not found\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "records",
											"item": [
												{
													"name": "{alert Record}",
													"item": [
														{
															"name": "v1 projects instances alertgroups records read",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records",
																		":alertRecord"
																	],
																	"variable": [
																		{
																			"key": "alertRecord",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Get record.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from amdins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get record\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rule not found"
															},
															"response": [
																{
																	"name": "Get record.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Successfully got record\",\n  \"data\": {\n    \"record\": \"job:prometheus_http_requests_total:rate5m\",\n    \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n    \"labels\": {\n      \"test\": \"test\"\n    }\n  }\n}"
																},
																{
																	"name": "Something went wrong.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not read record\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert rule not found.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Record not found.\"\n}"
																}
															]
														},
														{
															"name": "v1 projects instances alertgroups records update",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"expr\": \"eu in in deserunt\",\n  \"labels\": {}\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records",
																		":alertRecord"
																	],
																	"variable": [
																		{
																			"key": "alertRecord",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Update record.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update alert record\n\n***400*** - something went wrong updating the record\n\n***403*** - you are not authorized\n\n***404*** - alert record not found"
															},
															"response": [
																{
																	"name": "Update alert record.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Record updated successfully\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong updating the record.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not update record\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert record not found.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Record not found\"\n}"
																}
															]
														},
														{
															"name": "v1 projects instances alertgroups records delete",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records",
																		":alertRecord"
																	],
																	"variable": [
																		{
																			"key": "alertRecord",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Delete record.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete records\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
															},
															"response": [
																{
																	"name": "Delete record.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Record successfully deleted\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
																},
																{
																	"name": "Something went wrong deleting the alert rule.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not delete record\"\n}"
																},
																{
																	"name": "Accepts admin basic + token auth and oauth token.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
																},
																{
																	"name": "Alert record not found.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: basic",
																				"key": "Authorization",
																				"value": "Basic <credentials>"
																			},
																			{
																				"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																				"key": "Authorization",
																				"value": "deserunt"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records/:alertRecord",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"projects",
																				":projectId",
																				"instances",
																				":instanceId",
																				"alertgroups",
																				":groupName",
																				"records",
																				":alertRecord"
																			],
																			"variable": [
																				{
																					"key": "alertRecord",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "groupName",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "instanceId",
																					"value": "deserunt",
																					"description": "(Required) "
																				},
																				{
																					"key": "projectId",
																					"value": "deserunt",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"Could not delete record\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "v1 projects instances alertgroups records list",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName",
																"records"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get records.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get all records\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert group not found"
													},
													"response": [
														{
															"name": "Get all records",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Successfully got records\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not read records\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Alert group not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Alert group not found\"\n}"
														}
													]
												},
												{
													"name": "v1 projects instances alertgroups records create",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"record\": \"ullamco enim commodo eiu\",\n  \"expr\": \"consectetur commodo\",\n  \"labels\": {}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName",
																"records"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Create records.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create record\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert group not found"
													},
													"response": [
														{
															"name": "Create record.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Record successfully created\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not create record\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Alert group not found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could find alert group\"\n}"
														}
													]
												},
												{
													"name": "v1 projects instances alertgroups records partial update",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"record\": \"exercitation adipisicing consectetur pariatur\",\n    \"expr\": \"dolor eiusmod\",\n    \"labels\": {}\n  },\n  {\n    \"record\": \"laborum\",\n    \"expr\": \"officia\",\n    \"labels\": {}\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName",
																"records"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Patch records.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create records\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert group not found"
													},
													"response": [
														{
															"name": "Create records.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Records successfully created\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not create records\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Alert group not found",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Alert group not found\"\n}"
														}
													]
												},
												{
													"name": "v1 projects instances alertgroups records delete",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records?alertRecord=ad anim amet in,deserunt incididunt id eiusmod",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName",
																"records"
															],
															"query": [
																{
																	"key": "alertRecord",
																	"value": "ad anim amet in,deserunt incididunt id eiusmod",
																	"description": "(Required) Name of the records that should be deleted"
																}
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete records.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete records\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - alert rules not found"
													},
													"response": [
														{
															"name": "Delete records.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records?alertRecord=minim,et consequat in commodo",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"query": [
																		{
																			"key": "alertRecord",
																			"value": "minim,et consequat in commodo"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Records successfully deleted\",\n  \"data\": [\n    {\n      \"record\": \"job:prometheus_http_requests_total:rate5m\",\n      \"expr\": \"sum without(instance, method, controller, status_code)(rate(prometheus_http_requests_total[5m]))\",\n      \"labels\": {\n        \"test\": \"test\"\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Something went wrong",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records?alertRecord=minim,et consequat in commodo",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"query": [
																		{
																			"key": "alertRecord",
																			"value": "minim,et consequat in commodo"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Could not delete record\"\n}"
														},
														{
															"name": "Accepts admin basic + token auth and oauth token.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records?alertRecord=minim,et consequat in commodo",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"query": [
																		{
																			"key": "alertRecord",
																			"value": "minim,et consequat in commodo"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
														},
														{
															"name": "Alert rules not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: basic",
																		"key": "Authorization",
																		"value": "Basic <credentials>"
																	},
																	{
																		"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																		"key": "Authorization",
																		"value": "deserunt"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName/records?alertRecord=minim,et consequat in commodo",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"projects",
																		":projectId",
																		"instances",
																		":instanceId",
																		"alertgroups",
																		":groupName",
																		"records"
																	],
																	"query": [
																		{
																			"key": "alertRecord",
																			"value": "minim,et consequat in commodo"
																		}
																	],
																	"variable": [
																		{
																			"key": "groupName",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "instanceId",
																			"value": "deserunt",
																			"description": "(Required) "
																		},
																		{
																			"key": "projectId",
																			"value": "deserunt",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"Alert group not found\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "v1 projects instances alertgroups read",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups",
														":groupName"
													],
													"variable": [
														{
															"key": "groupName",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get alert group\n\n***400*** - something went wrong\n\n***403*** - you are not authorized"
											},
											"response": [
												{
													"name": "Get alert group",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got alert groups\",\n  \"data\": {\n    \"name\": \"test alert\",\n    \"interval\": \"5m\",\n    \"rules\": [\n      {\n        \"alert\": \"up test\",\n        \"expr\": \"up == 1\",\n        \"labels\": {\n          \"test\": \"test\"\n        },\n        \"for\": \"30s\",\n        \"annotations\": {\n          \"test\": \"test\"\n        }\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										},
										{
											"name": "v1 projects instances alertgroups update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"rules\": [\n    {\n      \"alert\": \"veniam adipisicing Lorem deserunt fugiat\",\n      \"expr\": \"sed id\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    },\n    {\n      \"alert\": \"deserunt in pariatur\",\n      \"expr\": \"aliqua sunt\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    }\n  ],\n  \"interval\": \"60s\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups",
														":groupName"
													],
													"variable": [
														{
															"key": "groupName",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Update alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update alert group\n\n***400*** - something went wrong updating the alert group\n\n***403*** - you are not authorized\n\n***404*** - secret nor found"
											},
											"response": [
												{
													"name": "Update alert group.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Alert group updated successfully\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong updating the alert group.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Secret not found.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
												}
											]
										},
										{
											"name": "v1 projects instances alertgroups delete",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups",
														":groupName"
													],
													"variable": [
														{
															"key": "groupName",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert group\n\n***400*** - could not delete alert group\n\n***403*** - you are not authorized\n\n***404*** - alert group config not found"
											},
											"response": [
												{
													"name": "Delete alert group.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Alert group has been deleted successfully\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong deleting the alert group.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not delete alert group config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Secret for config not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not delete alert group config\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "v1 projects instances alertgroups list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"alertgroups"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get all alert groups\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - could not read alert group config"
									},
									"response": [
										{
											"name": "Get all alert groups",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got alert groups\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Something went wrong.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Could not read alert group config.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances alertgroups create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"dolor nisi tempor\",\n  \"rules\": [\n    {\n      \"alert\": \"magna\",\n      \"expr\": \"reprehenderit culpa qui voluptate\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    },\n    {\n      \"alert\": \"in voluptate nulla\",\n      \"expr\": \"cupidatat proident velit voluptate non\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    }\n  ],\n  \"interval\": \"60s\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"alertgroups"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Create alert group config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   baerer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert group\n\n***400*** - could not create alert group config\n\n***403*** - you are not authorized\n\n***404*** - alert group config not found"
									},
									"response": [
										{
											"name": "Create alert group.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Group successfully created\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Could not create alert group config",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not create alert group config\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Alert group config not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not create alert group config\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances alertgroups partial update",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"name\": \"Ut mollit id\",\n    \"rules\": [\n      {\n        \"alert\": \"ut eiusmod est enim in\",\n        \"expr\": \"id\",\n        \"for\": \"0s\",\n        \"labels\": {},\n        \"annotations\": {}\n      },\n      {\n        \"alert\": \"ad Ut occaecat voluptate\",\n        \"expr\": \"ex tempor Duis Excepteur ipsum\",\n        \"for\": \"0s\",\n        \"labels\": {},\n        \"annotations\": {}\n      }\n    ],\n    \"interval\": \"60s\"\n  },\n  {\n    \"name\": \"anim\",\n    \"rules\": [\n      {\n        \"alert\": \"anim adipisicing laboris quis esse\",\n        \"expr\": \"eiusmod nulla proident\",\n        \"for\": \"0s\",\n        \"labels\": {},\n        \"annotations\": {}\n      },\n      {\n        \"alert\": \"pariatur proident\",\n        \"expr\": \"deserunt Duis\",\n        \"for\": \"0s\",\n        \"labels\": {},\n        \"annotations\": {}\n      }\n    ],\n    \"interval\": \"60s\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"alertgroups"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Patch alert groups route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert groups\n\n***400*** - could not create alert group\n\n***403*** - you are not authorized\n\n***404*** - alert group config not found"
									},
									"response": [
										{
											"name": "Create alert groups.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Groups successfully patched.\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Could not create alert group",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not patch alert groups\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Alert group config not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not patch alert groups\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances alertgroups delete",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups?groupName=ad anim amet in,deserunt incididunt id eiusmod",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"alertgroups"
											],
											"query": [
												{
													"key": "groupName",
													"value": "ad anim amet in,deserunt incididunt id eiusmod",
													"description": "(Required) Name of the groups that should be deleted"
												}
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete alert groups route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert group\n\n***400*** - could not delete alert group\n\n***403*** - you are not authorized\n\n***404*** - alert group config not found"
									},
									"response": [
										{
											"name": "Delete alert group.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups?groupName=minim,et consequat in commodo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"query": [
														{
															"key": "groupName",
															"value": "minim,et consequat in commodo"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Group successfully deleted\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Could not create alert group",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups?groupName=minim,et consequat in commodo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"query": [
														{
															"key": "groupName",
															"value": "minim,et consequat in commodo"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not delete alert group\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups?groupName=minim,et consequat in commodo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"query": [
														{
															"key": "groupName",
															"value": "minim,et consequat in commodo"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Alert group config not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/alertgroups?groupName=minim,et consequat in commodo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"alertgroups"
													],
													"query": [
														{
															"key": "groupName",
															"value": "minim,et consequat in commodo"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not delete alert group\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "backup-retentions",
							"item": [
								{
									"name": "v1 projects instances backup-retentions list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-retentions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"backup-retentions"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get backup retention.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***200*** - get backup retention\n\n***403*** - you do not have permission to perform this action\n\n***404*** - retention was not created"
									},
									"response": [
										{
											"name": "Get backup retention",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got backup retention\",\n  \"alertConfigBackupRetention\": \"14d\",\n  \"scrapeConfigBackupRetention\": \"14d\",\n  \"alertRulesBackupRetention\": \"14d\",\n  \"grafanaBackupRetention\": \"14d\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Retention was not created.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"No retention created.\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances backup-retentions update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retention\": \"ipsu\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-retentions?backupTarget=grafana,alertConfig",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"backup-retentions"
											],
											"query": [
												{
													"key": "backupTarget",
													"value": "grafana,alertConfig",
													"description": "List of backup targets"
												}
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Update backup retention.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***202*** - create backup retention\n\n***400*** - something went wrong\n\n***403*** - you do not have permission to perform this action"
									},
									"response": [
										{
											"name": "Create backup retention",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-retentions?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-retentions"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Backup retention will be created\"\n}"
										},
										{
											"name": "Something went wrong.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-retentions?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-retentions"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Json body is not valid\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-retentions?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-retentions"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "backup-schedules",
							"item": [
								{
									"name": "{schedule Id}",
									"item": [
										{
											"name": "v1 projects instances backup-schedules update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"schedule\": \"deserunt\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules/:scheduleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-schedules",
														":scheduleId"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "scheduleId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Update backup schedule.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***202*** - update backup schedule\n\n***403*** - you do not have permission to perform this action\n\n***404*** - backup schedule does not exists"
											},
											"response": [
												{
													"name": "Update backup schedule",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules/:scheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"backup-schedules",
																":scheduleId"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "scheduleId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Backup schedule will be updated\",\n  \"schedule\": {\n    \"schedule\": \"1 * * * *\",\n    \"scheduleId\": \"f546eff4-3c8d-4664-9657-a6ad46edffe5\"\n  }\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules/:scheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"backup-schedules",
																":scheduleId"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "scheduleId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Backup schedule does not exists",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules/:scheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"backup-schedules",
																":scheduleId"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "scheduleId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Backup schedule does not exists\"\n}"
												}
											]
										},
										{
											"name": "v1 projects instances backup-schedules delete",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules/:scheduleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-schedules",
														":scheduleId"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "scheduleId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete backup schedule.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***202*** - delete backup schedule\n\n***403*** - you do not have permission to perform this action\n\n***404*** - backup schedule does not exists"
											},
											"response": [
												{
													"name": "Delete backup schedule",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules/:scheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"backup-schedules",
																":scheduleId"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "scheduleId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Backup schedule will be deleted\"\n}"
												},
												{
													"name": "You do not have permission to perform this action.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules/:scheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"backup-schedules",
																":scheduleId"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "scheduleId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Backup schedule does not exists",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules/:scheduleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"backup-schedules",
																":scheduleId"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "scheduleId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Backup schedule does not exists\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "v1 projects instances backup-schedules list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules?backupTarget=grafana,alertConfig",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"backup-schedules"
											],
											"query": [
												{
													"key": "backupTarget",
													"value": "grafana,alertConfig",
													"description": "List of backup targets"
												}
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get backup schedules.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***200*** - get backup schedule\n\n***403*** - you do not have permission to perform this action\n\n***404*** - no backup schedule exists"
									},
									"response": [
										{
											"name": "Get backup schedule",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-schedules"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got backup schedule\",\n  \"alertConfigBackupSchedules\": [\n    {\n      \"schedule\": \"*/5 * * * *\",\n      \"scheduleId\": \"f546eff4-3c8d-4664-9657-a6ad46edffe5\"\n    },\n    {\n      \"schedule\": \"0 0 * * MON\",\n      \"scheduleId\": \"a3cddd87-a967-42ef-9413-041c731ac81a\"\n    }\n  ],\n  \"alertRulesBackupSchedules\": [\n    {\n      \"schedule\": \"*/5 * * * *\",\n      \"scheduleId\": \"f546eff4-3c8d-4664-9657-a6ad46edffe6\"\n    },\n    {\n      \"schedule\": \"0 0 * * MON\",\n      \"scheduleId\": \"a3cddd87-a967-42ef-9413-041c731ac81b\"\n    }\n  ],\n  \"scrapeConfigBackupSchedules\": [\n    {\n      \"schedule\": \"*/5 * * * *\",\n      \"scheduleId\": \"f546eff4-3c8d-4664-9657-a6ad46edffe7\"\n    },\n    {\n      \"schedule\": \"0 0 * * MON\",\n      \"scheduleId\": \"a3cddd87-a967-42ef-9413-041c731ac81c\"\n    }\n  ],\n  \"grafanaBackupSchedules\": [\n    {\n      \"schedule\": \"*/5 * * * *\",\n      \"scheduleId\": \"f546eff4-3c8d-4664-9657-a6ad46edffe8\"\n    },\n    {\n      \"schedule\": \"0 0 * * MON\",\n      \"scheduleId\": \"a3cddd87-a967-42ef-9413-041c731ac81d\"\n    }\n  ]\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-schedules"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "No Backup schedule exists",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-schedules"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"No Backup schedule exists\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances backup-schedules create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"schedule\": \"deserunt\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules?backupTarget=grafana,alertConfig",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"backup-schedules"
											],
											"query": [
												{
													"key": "backupTarget",
													"value": "grafana,alertConfig",
													"description": "List of backup targets"
												}
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Create backup schedules.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***202*** - create backup schedule\n\n***400*** - something went wrong\n\n***403*** - you do not have permission to perform this action"
									},
									"response": [
										{
											"name": "Create backup schedule",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-schedules"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Backup schedule will be created\",\n  \"schedule\": \"*/5 * * * *\"\n}"
										},
										{
											"name": "Something went wrong.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-schedules"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Json body is not valid\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-schedules?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backup-schedules"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "backups",
							"item": [
								{
									"name": "v1 projects instances backups list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups?backupTarget=grafana,alertConfig",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"backups"
											],
											"query": [
												{
													"key": "backupTarget",
													"value": "grafana,alertConfig",
													"description": "List of backup targets"
												}
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get backups.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***200*** - get all backups\n\n***400*** - something went wrong\n\n***403*** - you do not have permission to perform this action"
									},
									"response": [
										{
											"name": "Get all backups",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backups"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got backups\",\n  \"alertConfigBackups\": [\n    \"11-08-2021T14:08:21\",\n    \"14-08-2021T06:35:40\"\n  ],\n  \"alertRulesBackups\": [\n    \"11-08-2021T14:08:22\",\n    \"14-08-2021T06:35:41\"\n  ],\n  \"scrapeConfigBackups\": [\n    \"11-08-2021T14:08:23\",\n    \"14-08-2021T06:35:42\"\n  ],\n  \"grafanaBackups\": [\n    \"11-08-2021T14:08:31\",\n    \"14-08-2021T06:35:43\"\n  ]\n}"
										},
										{
											"name": "Something went wrong.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backups"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not get backups from storage\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backups"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances backups create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups?backupTarget=grafana,alertConfig",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"backups"
											],
											"query": [
												{
													"key": "backupTarget",
													"value": "grafana,alertConfig",
													"description": "List of backup targets"
												}
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Create backup.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***202*** - create backup\n\n***400*** - something went wrong\n\n***403*** - you do not have permissiont to perform this action"
									},
									"response": [
										{
											"name": "Create backup",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backups"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Backup will be created\"\n}"
										},
										{
											"name": "Something went wrong.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backups"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Json body is not valid\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups?backupTarget=alertConfig,grafana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backups"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertConfig,grafana"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances backups delete",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups/:backupDate?backupTarget=alertRules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"backups",
												":backupDate"
											],
											"query": [
												{
													"key": "backupTarget",
													"value": "alertRules",
													"description": "(Required) Backup target selector"
												}
											],
											"variable": [
												{
													"key": "backupDate",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete backup.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin basic + token auth\n*   oauth token for instance\n    \n\n**Responses**\n\n***202*** - delete backup\n\n***403*** - you do not have permission to perform this action\n\n***404*** - backup not found"
									},
									"response": [
										{
											"name": "Delete backup",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups/:backupDate?backupTarget=alertRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backups",
														":backupDate"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertRules"
														}
													],
													"variable": [
														{
															"key": "backupDate",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Backup will be deleted\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups/:backupDate?backupTarget=alertRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backups",
														":backupDate"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertRules"
														}
													],
													"variable": [
														{
															"key": "backupDate",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Backup not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backups/:backupDate?backupTarget=alertRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"backups",
														":backupDate"
													],
													"query": [
														{
															"key": "backupTarget",
															"value": "alertRules"
														}
													],
													"variable": [
														{
															"key": "backupDate",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Backup not found\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "grafana-configs",
							"item": [
								{
									"name": "v1 projects instances grafana-configs list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/grafana-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"grafana-configs"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get grafana configs for instance.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic + token\n*   oauth token\n*   authenticated api user\n    \n\n**Responses**\n\n***200*** - get grafana config\n\n***403*** - you do not have permission to perform this action"
									},
									"response": [
										{
											"name": "Get grafana config",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/grafana-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"grafana-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got grafana config\",\n  \"publicReadAccess\": false,\n  \"plugins\": [\n    \"Test Plugin\"\n  ]\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/grafana-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"grafana-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances grafana-configs update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"publicReadAccess\": true,\n  \"plugins\": [\n    \"velit cillum\",\n    \"nisi dolore id\"\n  ],\n  \"genericOauth\": {\n    \"enabled\": false,\n    \"apiUrl\": \"vol\",\n    \"authUrl\": \"ut cillum Duis\",\n    \"tokenUrl\": \"irure reprehenderit fugiat e\",\n    \"oauthClientId\": \"dolore ipsum amet\",\n    \"oauthClientSecret\": \"id consectetur ut dolor\",\n    \"roleAttributePath\": \"eiusmod commodo\",\n    \"scopes\": \"openid profile email\",\n    \"roleAttributeStrict\": true\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/grafana-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"grafana-configs"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Update grafana config.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic + token\n*   oauth token\n*   authenticated api user\n    \n\n**Responses**\n\n***202*** - update grafana config\n\n***400*** - no valid json body\n\n***403*** - you do not have permission to perform this action\n\n***500*** - something went wrong during grafana config update"
									},
									"response": [
										{
											"name": "Update grafana config",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/grafana-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"grafana-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully updated grafana config\"\n}"
										},
										{
											"name": "No valid json body",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/grafana-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"grafana-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"No valid json body\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/grafana-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"grafana-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Something went wrong during grafana config update",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token and authenticated api user.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/grafana-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"grafana-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Something went wrong during grafana config update\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "logs-alertgroups",
							"item": [
								{
									"name": "{group Name}",
									"item": [
										{
											"name": "v1 projects instances logs-alertgroups read",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-alertgroups",
														":groupName"
													],
													"variable": [
														{
															"key": "groupName",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get logs alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get aler group\n\n***400*** - something went wrong\n\n***403*** - you are not authorized"
											},
											"response": [
												{
													"name": "Get alert group",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully got alert groups\",\n  \"data\": {\n    \"name\": \"test alert\",\n    \"interval\": \"5m\",\n    \"rules\": [\n      {\n        \"alert\": \"up test\",\n        \"expr\": \"up == 1\",\n        \"labels\": {\n          \"test\": \"test\"\n        },\n        \"for\": \"30s\",\n        \"annotations\": {\n          \"test\": \"test\"\n        }\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										},
										{
											"name": "v1 projects instances logs-alertgroups update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"rules\": [\n    {\n      \"alert\": \"veniam adipisicing Lorem deserunt fugiat\",\n      \"expr\": \"sed id\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    },\n    {\n      \"alert\": \"deserunt in pariatur\",\n      \"expr\": \"aliqua sunt\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    }\n  ],\n  \"interval\": \"60s\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-alertgroups",
														":groupName"
													],
													"variable": [
														{
															"key": "groupName",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Update logs alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update alert group\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - secret not found"
											},
											"response": [
												{
													"name": "Update alert group.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Alert group updated successfully\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong updating the alert group.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Secret not found.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not update alert group config\"\n}"
												}
											]
										},
										{
											"name": "v1 projects instances logs-alertgroups delete",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-alertgroups",
														":groupName"
													],
													"variable": [
														{
															"key": "groupName",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete logs alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt tokoen from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - delete alert group\n\n***400*** - something went wrong deleting the alert group\n\n***403*** - you are not authorized\n\n***404*** - secret for config not found"
											},
											"response": [
												{
													"name": "Delete alert group.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Alert group has been deleted successfully\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong deleting the alert group.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not delete alert group config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Secret for config not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups/:groupName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"logs-alertgroups",
																":groupName"
															],
															"variable": [
																{
																	"key": "groupName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not delete alert group config\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "v1 projects instances logs-alertgroups list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"logs-alertgroups"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get logs alert group config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get all alert groups\n\n***400*** - something went wrong\n\n***403*** - you are not authorized\n\n***404*** - could not read alert group config"
									},
									"response": [
										{
											"name": "Get all alert groups",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got alert groups\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Something went wrong.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Could not read alert group config.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not read alert group config\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances logs-alertgroups create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"dolor nisi tempor\",\n  \"rules\": [\n    {\n      \"alert\": \"magna\",\n      \"expr\": \"reprehenderit culpa qui voluptate\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    },\n    {\n      \"alert\": \"in voluptate nulla\",\n      \"expr\": \"cupidatat proident velit voluptate non\",\n      \"for\": \"0s\",\n      \"labels\": {},\n      \"annotations\": {}\n    }\n  ],\n  \"interval\": \"60s\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"logs-alertgroups"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Create logs alert group config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create alert group\n\n***400*** - could not creat aler group config\n\n***403*** - you are not authorized\n\n***404*** - alert group config not found"
									},
									"response": [
										{
											"name": "Create alert group.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Group successfully created\",\n  \"data\": [\n    {\n      \"name\": \"test alert\",\n      \"interval\": \"5m\",\n      \"rules\": [\n        {\n          \"alert\": \"up test\",\n          \"expr\": \"up == 1\",\n          \"labels\": {\n            \"test\": \"test\"\n          },\n          \"for\": \"30s\",\n          \"annotations\": {\n            \"test\": \"test\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Could not create alert group config",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not create alert group config\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Alert group config not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-alertgroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-alertgroups"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not create alert group config\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "logs-configs",
							"item": [
								{
									"name": "v1 projects instances logs-configs list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"logs-configs"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get logs configuration for instance.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   oauth token from oauth keeper\n    \n\n**Responses**\n\n***200*** - get logs config\n\n***403*** - you do not have permission to perform this action"
									},
									"response": [
										{
											"name": "Get logs config",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got logs config\",\n  \"config\": {\n    \"retention\": \"14d\"\n  }\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances logs-configs update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retention\": \"amet par\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"logs-configs"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Update logs config.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   oauth token from aouth keeper\n    \n\n**Responses**\n\n***202*** - update logs config\n\n***400*** - no valid json body\n\n***403*** - you do not have permission to perform this action\n\n***500*** - something went wrong"
									},
									"response": [
										{
											"name": "Update logs config",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully updated logs configuration\"\n}"
										},
										{
											"name": "No valid json body",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"No valid json body\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Something went wrong",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/logs-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"logs-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Something went wrong\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "metrics-storage-retentions",
							"item": [
								{
									"name": "v1 projects instances metrics-storage-retentions list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/metrics-storage-retentions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"metrics-storage-retentions"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get bucket retention time for instance.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic + token auth\n*   oauth token\n    \n\n**Responses**\n\n***200*** - get bucket retention\n\n***403*** - you do not have permission to perform this action"
									},
									"response": [
										{
											"name": "Get bucket retention",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/metrics-storage-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"metrics-storage-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got bucket retention\",\n  \"metricsRetentionTimeRaw\": \"14d\",\n  \"metricsRetentionTime5m\": \"0d\",\n  \"metricsRetentionTime1h\": \"0d\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/metrics-storage-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"metrics-storage-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances metrics-storage-retentions update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metricsRetentionTimeRaw\": \"est \",\n  \"metricsRetentionTime5m\": \"rep\",\n  \"metricsRetentionTime1h\": \"null\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/metrics-storage-retentions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"metrics-storage-retentions"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Update bucket retention time.\n\n**Authorization**\n\nAccepts:\n\n*   admin basic + token auth\n*   oauth token\n    \n\n**Responses**\n\n***202*** - update bucket retention\n\n***400*** - no valid json body\n\n***403*** - you do not have permission to perform this action\n\n***500*** - something went wrong during bucket retention time update process"
									},
									"response": [
										{
											"name": "Update bucket retention",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/metrics-storage-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"metrics-storage-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully updated bucket retention time\"\n}"
										},
										{
											"name": "No valid json body",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/metrics-storage-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"metrics-storage-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"No valid json body\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/metrics-storage-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"metrics-storage-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Something went wrong during bucket retention time update process",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts admin basic + token auth and oauth token.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/metrics-storage-retentions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"metrics-storage-retentions"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Something went wrong during bucket retention time update process\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "scrapeconfigs",
							"item": [
								{
									"name": "{job Name}",
									"item": [
										{
											"name": "v1 projects instances scrapeconfigs read",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs",
														":jobName"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "jobName",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Get scrape config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get scrape target\n\n***400*** - something went wrong\n\n***403*** - you are not authorized"
											},
											"response": [
												{
													"name": "Get scrape target",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully get job\",\n  \"data\": {\n    \"jobName\": \"test\",\n    \"scheme\": \"https\",\n    \"scrapeInterval\": \"5m\",\n    \"scrapeTimeout\": \"1m\",\n    \"staticConfigs\": [\n      {\n        \"targets\": [\n          \"example.com\"\n        ]\n      }\n    ],\n    \"metricsPath\": \"/metrics\"\n  }\n}"
												},
												{
													"name": "Something went wrong.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not read scrape config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token for instances.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												}
											]
										},
										{
											"name": "v1 projects instances scrapeconfigs update",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"scheme\": \"http\",\n  \"scrapeInterval\": \"ex se\",\n  \"scrapeTimeout\": \"non vol\",\n  \"staticConfigs\": [\n    {\n      \"targets\": [\n        \"voluptate reprehenderit in Excepte\",\n        \"enim incididunt ex\"\n      ],\n      \"labels\": {}\n    },\n    {\n      \"targets\": [\n        \"ea amet pariatur\",\n        \"culpa Excepteur deserunt\"\n      ],\n      \"labels\": {}\n    }\n  ],\n  \"metricsPath\": \"/metrics\",\n  \"basicAuth\": {\n    \"username\": \"commodo cupidatat\",\n    \"password\": \"eu\"\n  },\n  \"tlsConfig\": {\n    \"insecureSkipVerify\": false\n  },\n  \"bearerToken\": \"dolore dolore nostrud aliqua ullamco\",\n  \"metricsRelabelConfigs\": [\n    {\n      \"sourceLabels\": [\n        \"laborum amet culpa nisi\",\n        \"sint Ut sit qui\"\n      ],\n      \"separator\": \";\",\n      \"targetLabel\": \"Excepteur adipisicing nostrud quis\",\n      \"regex\": \".*\",\n      \"modulus\": -16977998.916638047,\n      \"replacement\": \"$1\",\n      \"action\": \"replace\"\n    },\n    {\n      \"sourceLabels\": [\n        \"mollit Excepteur\",\n        \"dolor\"\n      ],\n      \"separator\": \";\",\n      \"targetLabel\": \"sed tempor\",\n      \"regex\": \".*\",\n      \"modulus\": 95936106.45081082,\n      \"replacement\": \"$1\",\n      \"action\": \"replace\"\n    }\n  ],\n  \"params\": {},\n  \"honorLabels\": \"false\",\n  \"honorTimeStamps\": \"false\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs",
														":jobName"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "jobName",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Update scrape config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - update scrape target for prometheus\n\n***400*** - something went wrong updating the job\n\n***403*** - you are not authorized\n\n***404*** - secret for config not found"
											},
											"response": [
												{
													"name": "Update scrape target for prometheus.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Successfully updated job\",\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ]\n}"
												},
												{
													"name": "Something went wrong updating the job.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not update scrape config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token for instances.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Secret for config not found.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not update scrape config\"\n}"
												}
											]
										},
										{
											"name": "v1 projects instances scrapeconfigs delete",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs",
														":jobName"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "jobName",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete scrape config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic token from api user\n    \n\n**Responses**\n\n***202*** - deleted scrape configs\n\n***400*** - something went wrong deleting the scrape config\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
											},
											"response": [
												{
													"name": "Delete scrape target for prometheus.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ],\n  \"message\": \"Job has been deleted successfully\"\n}"
												},
												{
													"name": "Something went wrong deleting the job.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not delete scrape config\"\n}"
												},
												{
													"name": "Accepts admin basic + token auth and oauth token for instances.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
												},
												{
													"name": "Secret for config not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															},
															{
																"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
																"key": "Authorization",
																"value": "deserunt"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs/:jobName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"projects",
																":projectId",
																"instances",
																":instanceId",
																"scrapeconfigs",
																":jobName"
															],
															"variable": [
																{
																	"key": "instanceId",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "jobName",
																	"value": "deserunt",
																	"description": "(Required) "
																},
																{
																	"key": "projectId",
																	"value": "deserunt",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"Could not delete scrape config\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "v1 projects instances scrapeconfigs list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"scrapeconfigs"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get scrape config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get all scrape targets\n\n***400*** - something went wrong\n\n***403*** - you are not authorized"
									},
									"response": [
										{
											"name": "Get all scrape targets",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got scrape config\",\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ]\n}"
										},
										{
											"name": "Something went wrong.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not read scrape config\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token for instances.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances scrapeconfigs create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobName\": \"proident esse\",\n  \"scheme\": \"https\",\n  \"scrapeInterval\": \"proid\",\n  \"scrapeTimeout\": \"cill\",\n  \"staticConfigs\": [\n    {\n      \"targets\": [\n        \"ut et\",\n        \"est quis voluptate reprehenderit amet\"\n      ],\n      \"labels\": {}\n    },\n    {\n      \"targets\": [\n        \"exercitation consequat sunt\",\n        \"ex dolor qui incididunt\"\n      ],\n      \"labels\": {}\n    }\n  ],\n  \"metricsPath\": \"/metrics\",\n  \"sampleLimit\": 5000,\n  \"basicAuth\": {\n    \"username\": \"Ut magna\",\n    \"password\": \"non eu ipsum in\"\n  },\n  \"oauth2\": {\n    \"clientId\": \"Excepteur sit\",\n    \"clientSecret\": \"proident in fugiat aute\",\n    \"tokenUrl\": \"eu ad sint\",\n    \"scopes\": [\n      \"velit nostrud adipisicing\",\n      \"dolore occaecat enim Ut aliqua\"\n    ],\n    \"tlsConfig\": {\n      \"insecureSkipVerify\": false\n    }\n  },\n  \"tlsConfig\": {\n    \"insecureSkipVerify\": false\n  },\n  \"bearerToken\": \"dolor ut\",\n  \"metricsRelabelConfigs\": [\n    {\n      \"sourceLabels\": [\n        \"commodo aliqua id\",\n        \"ipsum exercitation consectetur cupidatat\"\n      ],\n      \"separator\": \";\",\n      \"targetLabel\": \"aliqua Duis est voluptate dolore\",\n      \"regex\": \".*\",\n      \"modulus\": -43642909.95419297,\n      \"replacement\": \"$1\",\n      \"action\": \"replace\"\n    },\n    {\n      \"sourceLabels\": [\n        \"ea in\",\n        \"anim tempor veniam eu\"\n      ],\n      \"separator\": \";\",\n      \"targetLabel\": \"ut proident eu\",\n      \"regex\": \".*\",\n      \"modulus\": -99435153.8319239,\n      \"replacement\": \"$1\",\n      \"action\": \"replace\"\n    }\n  ],\n  \"params\": {},\n  \"honorLabels\": \"false\",\n  \"honorTimeStamps\": \"false\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"scrapeconfigs"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Create scrape config route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create scrape target for prometheus\n\n***400*** - something went wrong creating the job\n\n***403*** - you are not authorized\n\n***404*** - secret for config not found"
									},
									"response": [
										{
											"name": "Create scrape target for prometheus.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Job successfully created\",\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ]\n}"
										},
										{
											"name": "Something went wrong creating the job.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not create scrape config\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token for instances.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Secret for config not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not create scrape config\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances scrapeconfigs partial update",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"jobName\": \"mollit veniam magna\",\n    \"scheme\": \"http\",\n    \"scrapeInterval\": \"ad con\",\n    \"scrapeTimeout\": \"labor\",\n    \"staticConfigs\": [\n      {\n        \"targets\": [\n          \"fugiat in sunt voluptate\",\n          \"adipisicing ut anim reprehenderit ut\"\n        ],\n        \"labels\": {}\n      },\n      {\n        \"targets\": [\n          \"anim\",\n          \"exercitation sed nisi\"\n        ],\n        \"labels\": {}\n      }\n    ],\n    \"metricsPath\": \"/metrics\",\n    \"sampleLimit\": 5000,\n    \"basicAuth\": {\n      \"username\": \"laboris eu aliqua elit consectetur\",\n      \"password\": \"sit ut\"\n    },\n    \"oauth2\": {\n      \"clientId\": \"magna aute dolor\",\n      \"clientSecret\": \"dolor irure\",\n      \"tokenUrl\": \"deserunt laborum sed\",\n      \"scopes\": [\n        \"do ea sit\",\n        \"in sit dolore dolor\"\n      ],\n      \"tlsConfig\": {\n        \"insecureSkipVerify\": false\n      }\n    },\n    \"tlsConfig\": {\n      \"insecureSkipVerify\": false\n    },\n    \"bearerToken\": \"labore sint commodo incididunt\",\n    \"metricsRelabelConfigs\": [\n      {\n        \"sourceLabels\": [\n          \"nisi dolore id enim\",\n          \"nulla incididunt reprehenderit Ut eu\"\n        ],\n        \"separator\": \";\",\n        \"targetLabel\": \"Duis enim adipisicing\",\n        \"regex\": \".*\",\n        \"modulus\": -38124586.07904618,\n        \"replacement\": \"$1\",\n        \"action\": \"replace\"\n      },\n      {\n        \"sourceLabels\": [\n          \"esse laboris non in\",\n          \"culpa deserunt ex velit labore\"\n        ],\n        \"separator\": \";\",\n        \"targetLabel\": \"minim laboris aute\",\n        \"regex\": \".*\",\n        \"modulus\": -1936281.3632401526,\n        \"replacement\": \"$1\",\n        \"action\": \"replace\"\n      }\n    ],\n    \"params\": {},\n    \"honorLabels\": \"false\",\n    \"honorTimeStamps\": \"false\"\n  },\n  {\n    \"jobName\": \"nulla anim\",\n    \"scheme\": \"http\",\n    \"scrapeInterval\": \"cupi\",\n    \"scrapeTimeout\": \"nos\",\n    \"staticConfigs\": [\n      {\n        \"targets\": [\n          \"aute pariatur nisi culpa\",\n          \"ex adipisicing\"\n        ],\n        \"labels\": {}\n      },\n      {\n        \"targets\": [\n          \"in in\",\n          \"non ut aliquip ad\"\n        ],\n        \"labels\": {}\n      }\n    ],\n    \"metricsPath\": \"/metrics\",\n    \"sampleLimit\": 5000,\n    \"basicAuth\": {\n      \"username\": \"ipsum minim\",\n      \"password\": \"ipsum Duis aliquip anim\"\n    },\n    \"oauth2\": {\n      \"clientId\": \"tempor nostrud veniam sint fugiat\",\n      \"clientSecret\": \"elit eiusmod tempor amet Excepteur\",\n      \"tokenUrl\": \"eu id\",\n      \"scopes\": [\n        \"nisi anim\",\n        \"id Excepteur culpa\"\n      ],\n      \"tlsConfig\": {\n        \"insecureSkipVerify\": false\n      }\n    },\n    \"tlsConfig\": {\n      \"insecureSkipVerify\": false\n    },\n    \"bearerToken\": \"est in\",\n    \"metricsRelabelConfigs\": [\n      {\n        \"sourceLabels\": [\n          \"esse aute aliqua\",\n          \"laborum enim\"\n        ],\n        \"separator\": \";\",\n        \"targetLabel\": \"nisi veniam de\",\n        \"regex\": \".*\",\n        \"modulus\": -59211495.03018319,\n        \"replacement\": \"$1\",\n        \"action\": \"replace\"\n      },\n      {\n        \"sourceLabels\": [\n          \"adipisicing\",\n          \"reprehenderit\"\n        ],\n        \"separator\": \";\",\n        \"targetLabel\": \"aliquip in\",\n        \"regex\": \".*\",\n        \"modulus\": 28538408.677221254,\n        \"replacement\": \"$1\",\n        \"action\": \"replace\"\n      }\n    ],\n    \"params\": {},\n    \"honorLabels\": \"false\",\n    \"honorTimeStamps\": \"false\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"scrapeconfigs"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Patch scrape config.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - create scrape target for prometheus\n\n***400*** - something went wrong creating the job\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
									},
									"response": [
										{
											"name": "Create scrape targets for prometheus.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Job successfully created\",\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ]\n}"
										},
										{
											"name": "Something went wrong creating the job.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not create scrape config\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token for instances.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Instance not found.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not create scrape config\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances scrapeconfigs delete",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs?jobName=ad anim amet in,deserunt incididunt id eiusmod",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"scrapeconfigs"
											],
											"query": [
												{
													"key": "jobName",
													"value": "ad anim amet in,deserunt incididunt id eiusmod",
													"description": "(Required) Name of the jobs that should be deleted"
												}
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete scrape configs route.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from auth\n*   basic auth from api user\n    \n\n**Responses**\n\n***202*** - deleted scrape configs\n\n***400*** - something went wrong deleting the scrape config\n\n***403*** - you are not authorized\n\n***404*** - instance not found"
									},
									"response": [
										{
											"name": "Deleted scrape configs.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs?jobName=minim,et consequat in commodo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"query": [
														{
															"key": "jobName",
															"value": "minim,et consequat in commodo"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Scrape configs successfully deleted\",\n  \"data\": [\n    {\n      \"jobName\": \"test\",\n      \"scheme\": \"https\",\n      \"scrapeInterval\": \"5m\",\n      \"scrapeTimeout\": \"1m\",\n      \"staticConfigs\": [\n        {\n          \"targets\": [\n            \"example.com\"\n          ]\n        }\n      ],\n      \"metricsPath\": \"/metrics\"\n    }\n  ]\n}"
										},
										{
											"name": "Something went wrong deleting the scrape config.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs?jobName=minim,et consequat in commodo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"query": [
														{
															"key": "jobName",
															"value": "minim,et consequat in commodo"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not delete scrape configs\"\n}"
										},
										{
											"name": "Accepts admin basic + token auth and oauth token for instances.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs?jobName=minim,et consequat in commodo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"query": [
														{
															"key": "jobName",
															"value": "minim,et consequat in commodo"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Instance not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/scrapeconfigs?jobName=minim,et consequat in commodo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"scrapeconfigs"
													],
													"query": [
														{
															"key": "jobName",
															"value": "minim,et consequat in commodo"
														}
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Could not delete scrape configs\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "traces-configs",
							"item": [
								{
									"name": "v1 projects instances traces-configs list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/traces-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"traces-configs"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Get traces configuration for instance.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   oauth token from oauth keeper\n    \n\n**Responses**\n\n***200*** - get traces config\n\n***403*** - you do not have permission to perform this action"
									},
									"response": [
										{
											"name": "Get traces config",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/traces-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"traces-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully got traces config\",\n  \"config\": {\n    \"retention\": \"14d\"\n  }\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/traces-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"traces-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										}
									]
								},
								{
									"name": "v1 projects instances traces-configs update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retention\": \"Ut\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/traces-configs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"traces-configs"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										},
										"description": "Update traces config.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   oauth token from oauth keeper\n    \n\n**Responses**\n\n***202*** - update traces config\n\n***400*** - no valid json body\n\n***403*** - you do not have permission to perform this action\n\n***500*** - something went wrong"
									},
									"response": [
										{
											"name": "Update traces config",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/traces-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"traces-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Successfully updated traces configuration\"\n}"
										},
										{
											"name": "No valid json body",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/traces-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"traces-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"No valid json body\"\n}"
										},
										{
											"name": "You do not have permission to perform this action.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/traces-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"traces-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
										},
										{
											"name": "Something went wrong",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													},
													{
														"description": "(Required) Accepts api user basic auth and oauth token from oath keeper.",
														"key": "Authorization",
														"value": "deserunt"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/traces-configs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"projects",
														":projectId",
														"instances",
														":instanceId",
														"traces-configs"
													],
													"variable": [
														{
															"key": "instanceId",
															"value": "deserunt",
															"description": "(Required) "
														},
														{
															"key": "projectId",
															"value": "deserunt",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Something went wrong\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "v1 projects instances read",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"projects",
										":projectId",
										"instances",
										":instanceId"
									],
									"variable": [
										{
											"key": "instanceId",
											"value": "deserunt",
											"description": "(Required) "
										},
										{
											"key": "projectId",
											"value": "deserunt",
											"description": "(Required) "
										}
									]
								},
								"description": "Get instance information.\n\n**Authorization**\n\nAccepts:\n\n*   basic auth\n*   bearer token from admins\n*   jwt token from oauth\n*   basic auth from api user\n    \n\n**Responses**\n\n***200*** - get instance data\n\n***403*** - you are not authorized"
							},
							"response": [
								{
									"name": "Get instance data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Successfully got services\",\n  \"instance\": {\n    \"instance\": \"123456\",\n    \"cluster\": \"stackit\",\n    \"grafanaUrl\": \"https://ui.stackit.argus.eu01.cloud/instances/123456\",\n    \"dashboardUrl\": \"dashboard.example.com\",\n    \"grafanaPlugins\": [],\n    \"name\": \"test\",\n    \"grafanaAdminPassword\": \"asdf313kles23450des0asdf313kles2\",\n    \"grafanaAdminUser\": \"admin\",\n    \"metricsRetentionTimeRaw\": 14,\n    \"metricsRetentionTime5m\": 0,\n    \"metricsRetentionTime1h\": 0,\n    \"metricsUrl\": \"https://storage.api.stackit.argus.eu01.cloud/instances/123456\",\n    \"grafanaPublicReadAccess\": false,\n    \"targetsUrl\": \"https://metrics.stackit.argus.eu01.cloud/instances/123456\",\n    \"alertingUrl\": \"https://alerting.stackit.argus.eu01.cloud/instances/123456\",\n    \"plan\": {\n      \"planId\": \"7b1fbd9c-9acd-42ce-95d3-0f6822d6cabe\",\n      \"description\": \"Small Plan\",\n      \"name\": \"SmallPlan\",\n      \"bucketSize\": 20,\n      \"grafanaGlobalUsers\": 10,\n      \"grafanaGlobalOrgs\": 2,\n      \"grafanaGlobalDashboards\": 20,\n      \"alertRules\": 1000,\n      \"targetNumber\": 2,\n      \"samplesPerScrape\": 1000,\n      \"grafanaGlobalSessions\": 10,\n      \"amount\": 49,\n      \"alertReceivers\": 10,\n      \"alertMatchers\": 10\n    }\n  }\n}"
								},
								{
									"name": "Accepts admin basic + token auth and oauth token.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts basic auth and bearer token from admins and jwt token from oauth and basic auth from api user",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId"
											],
											"variable": [
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
								}
							]
						},
						{
							"name": "v1 projects instances backup-restores create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-restores/:backupDate?restoreTarget=alertRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"projects",
										":projectId",
										"instances",
										":instanceId",
										"backup-restores",
										":backupDate"
									],
									"query": [
										{
											"key": "restoreTarget",
											"value": "alertRules",
											"description": "(Required) List of restore targets"
										}
									],
									"variable": [
										{
											"key": "backupDate",
											"value": "deserunt",
											"description": "(Required) "
										},
										{
											"key": "instanceId",
											"value": "deserunt",
											"description": "(Required) "
										},
										{
											"key": "projectId",
											"value": "deserunt",
											"description": "(Required) "
										}
									]
								},
								"description": "Restore backup.\n\n**Authorization**\n\nAccepts:\n\n*   api user basic auth\n*   admin bais + token auth\n*   oauth token for instance\n    \n\n**Response**\n\n***202*** - restore backup\n\n***403*** - you do not have permission to perform this action\n\n***404*** - backup not found"
							},
							"response": [
								{
									"name": "Restore backup",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-restores/:backupDate?restoreTarget=alertRules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"backup-restores",
												":backupDate"
											],
											"query": [
												{
													"key": "restoreTarget",
													"value": "alertRules"
												}
											],
											"variable": [
												{
													"key": "backupDate",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Restore will be proceeded\"\n}"
								},
								{
									"name": "You do not have permission to perform this action.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-restores/:backupDate?restoreTarget=alertRules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"backup-restores",
												":backupDate"
											],
											"query": [
												{
													"key": "restoreTarget",
													"value": "alertRules"
												}
											],
											"variable": [
												{
													"key": "backupDate",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
								},
								{
									"name": "Backup not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											},
											{
												"description": "(Required) Accepts api user basic auth, admin basic + token auth and oauth token for instance.",
												"key": "Authorization",
												"value": "deserunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/projects/:projectId/instances/:instanceId/backup-restores/:backupDate?restoreTarget=alertRules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"projects",
												":projectId",
												"instances",
												":instanceId",
												"backup-restores",
												":backupDate"
											],
											"query": [
												{
													"key": "restoreTarget",
													"value": "alertRules"
												}
											],
											"variable": [
												{
													"key": "backupDate",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "instanceId",
													"value": "deserunt",
													"description": "(Required) "
												},
												{
													"key": "projectId",
													"value": "deserunt",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Backup not found\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "v1 monitoring-auth list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/monitoring-auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"monitoring-auth"
							]
						},
						"description": "Get pcs authenticated.\n\n**Responses**\n\n***200*** - get autheticated for pcs\n\n***403*** - you are not authorized"
					},
					"response": [
						{
							"name": "Get authenticated for pcs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									},
									{
										"description": "(Required) Accepts admin auth",
										"key": "Authorization",
										"value": "deserunt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/monitoring-auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"monitoring-auth"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Is authenticated\"\n}"
						},
						{
							"name": "You are not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									},
									{
										"description": "(Required) Accepts admin auth",
										"key": "Authorization",
										"value": "deserunt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/monitoring-auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"monitoring-auth"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
						}
					]
				},
				{
					"name": "v1 monitoring-sd list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/monitoring-sd",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"monitoring-sd"
							]
						},
						"description": "Get list of targets to scrape.\n\n**Responses**\n\n***200*** - get list of prometheus cluster scrapes\n\n***403*** - you are not authorized"
					},
					"response": [
						{
							"name": "Get list of prometheus cluster scrapes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									},
									{
										"description": "(Required) Accepts admin auth",
										"key": "Authorization",
										"value": "deserunt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/monitoring-sd",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"monitoring-sd"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"targets\": [\n      \"pcs.testing.argus.eu01.stackit.cloud\"\n    ]\n  }\n]"
						},
						{
							"name": "You are not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									},
									{
										"description": "(Required) Accepts admin auth",
										"key": "Authorization",
										"value": "deserunt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/monitoring-sd",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"monitoring-sd"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
						}
					]
				},
				{
					"name": "v1 plans list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/plans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"plans"
							]
						},
						"description": "Get all plans."
					},
					"response": [
						{
							"name": "Get all plans",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									},
									{
										"description": "(Required) Accepts admin basic auth + api token.",
										"key": "Authorization",
										"value": "deserunt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/plans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"plans"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Successfully got plans\",\n  \"plans\": [\n    {\n      \"planId\": \"7b1fbd9c-9acd-42ce-95d3-0f6822d6cabe\",\n      \"description\": \"Small Plan\",\n      \"name\": \"SmallPlan\",\n      \"bucketSize\": 20,\n      \"grafanaGlobalUsers\": 10,\n      \"grafanaGlobalOrgs\": 2,\n      \"grafanaGlobalDashboards\": 20,\n      \"alertRules\": 1000,\n      \"targetNumber\": 2,\n      \"samplesPerScrape\": 1000,\n      \"grafanaGlobalSessions\": 10,\n      \"amount\": 49,\n      \"alertReceivers\": 10,\n      \"alertMatchers\": 10\n    }\n  ]\n}"
						},
						{
							"name": "You do not have permission to perform this action.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									},
									{
										"description": "(Required) Accepts admin basic auth + api token.",
										"key": "Authorization",
										"value": "deserunt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/plans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"plans"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"You do not have permission to perform this action.\"\n}"
						}
					]
				}
			]
		},
		{
			"name": " list",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						""
					]
				},
				"description": "Get 200 ok.\n\n**Responses**\n\n200 - Health route that always returns 200 ok."
			},
			"response": [
				{
					"name": "Health route that always return 200 ok.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: basic",
								"key": "Authorization",
								"value": "Basic <credentials>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "delete this and insert your password",
				"type": "string"
			},
			{
				"key": "username",
				"value": "delete this and insert your username",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "delete this and set your base url to your argus instance",
			"type": "string"
		}
	]
}